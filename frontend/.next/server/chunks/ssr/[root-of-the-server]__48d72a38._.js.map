{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/utils/errorHandler.js"],"sourcesContent":["/**\n * Centralized error handling utilities\n */\n\nexport class AppError extends Error {\n  constructor(message, code = 'UNKNOWN_ERROR', details = {}) {\n    super(message);\n    this.name = 'AppError';\n    this.code = code;\n    this.details = details;\n    this.timestamp = new Date().toISOString();\n  }\n}\n\nexport const ErrorCodes = {\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  AUTH_ERROR: 'AUTH_ERROR',\n  WEBSOCKET_ERROR: 'WEBSOCKET_ERROR',\n  ENCRYPTION_ERROR: 'ENCRYPTION_ERROR',\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  PERMISSION_ERROR: 'PERMISSION_ERROR',\n  SERVER_ERROR: 'SERVER_ERROR',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR'\n};\n\nexport const getErrorMessage = (error) => {\n  if (error instanceof AppError) {\n    return error.message;\n  }\n\n  if (error?.code) {\n    switch (error.code) {\n      case 'auth/network-request-failed':\n        return 'Network error. Please check your connection and try again.';\n      case 'auth/too-many-requests':\n        return 'Too many failed attempts. Please try again later.';\n      case 'auth/popup-blocked':\n        return 'Pop-up was blocked. Please allow pop-ups and try again.';\n      case 'auth/popup-closed-by-user':\n        return 'Sign-in was cancelled. Please try again.';\n      case 'auth/user-disabled':\n        return 'This account has been disabled. Please contact support.';\n      case 'auth/user-not-found':\n        return 'No account found with this email address.';\n      case 'auth/wrong-password':\n        return 'Incorrect password. Please try again.';\n      case 'auth/invalid-email':\n        return 'Invalid email address format.';\n      default:\n        return error.message || 'An unexpected error occurred.';\n    }\n  }\n\n  if (error?.message) {\n    return error.message;\n  }\n\n  return 'An unexpected error occurred. Please try again.';\n};\n\nexport const logError = (error, context = {}) => {\n  const errorInfo = {\n    message: error.message,\n    stack: error.stack,\n    code: error.code,\n    timestamp: new Date().toISOString(),\n    context,\n    userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n    url: typeof window !== 'undefined' ? window.location.href : 'unknown'\n  };\n\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.error('Error logged:', errorInfo);\n  }\n\n  // In production, send to error reporting service\n  if (process.env.NODE_ENV === 'production') {\n    // Example: Send to Sentry, LogRocket, or custom logging service\n    // errorReportingService.log(errorInfo);\n  }\n\n  return errorInfo;\n};\n\nexport const handleAsyncError = (asyncFn) => {\n  return async (...args) => {\n    try {\n      return await asyncFn(...args);\n    } catch (error) {\n      logError(error, { function: asyncFn.name, args });\n      throw error;\n    }\n  };\n};\n\nexport const withErrorHandling = (component) => {\n  return (props) => {\n    try {\n      return component(props);\n    } catch (error) {\n      logError(error, { component: component.name, props });\n      throw error;\n    }\n  };\n};\n\nexport const isNetworkError = (error) => {\n  return (\n    error.code === 'NETWORK_ERROR' ||\n    error.message?.includes('network') ||\n    error.message?.includes('fetch') ||\n    error.name === 'NetworkError'\n  );\n};\n\nexport const isAuthError = (error) => {\n  return (\n    error.code === 'AUTH_ERROR' ||\n    error.code?.startsWith('auth/') ||\n    error.message?.includes('authentication') ||\n    error.message?.includes('unauthorized')\n  );\n};\n\nexport const shouldRetry = (error, retryCount = 0, maxRetries = 3) => {\n  if (retryCount >= maxRetries) {\n    return false;\n  }\n\n  // Retry network errors\n  if (isNetworkError(error)) {\n    return true;\n  }\n\n  // Retry server errors (5xx)\n  if (error.status >= 500 && error.status < 600) {\n    return true;\n  }\n\n  // Don't retry auth errors or client errors\n  if (isAuthError(error) || (error.status >= 400 && error.status < 500)) {\n    return false;\n  }\n\n  return false;\n};\n\nexport const retryWithBackoff = async (fn, maxRetries = 3, baseDelay = 1000) => {\n  let lastError;\n  \n  for (let i = 0; i <= maxRetries; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error;\n      \n      if (i === maxRetries || !shouldRetry(error, i, maxRetries)) {\n        throw error;\n      }\n      \n      // Exponential backoff with jitter\n      const delay = baseDelay * Math.pow(2, i) + Math.random() * 1000;\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n  \n  throw lastError;\n};\n\n// Encryption-specific error handling\nexport const EncryptionErrorCodes = {\n  KEY_GENERATION_FAILED: 'ENCRYPTION_KEY_GENERATION_FAILED',\n  ENCRYPTION_FAILED: 'ENCRYPTION_FAILED',\n  DECRYPTION_FAILED: 'DECRYPTION_FAILED',\n  KEY_EXCHANGE_FAILED: 'ENCRYPTION_KEY_EXCHANGE_FAILED',\n  SIGNATURE_VERIFICATION_FAILED: 'ENCRYPTION_SIGNATURE_VERIFICATION_FAILED',\n  STORAGE_FAILED: 'ENCRYPTION_STORAGE_FAILED',\n  INITIALIZATION_FAILED: 'ENCRYPTION_INITIALIZATION_FAILED'\n};\n\nexport const isEncryptionError = (error) => {\n  return (\n    error.code?.startsWith('ENCRYPTION_') ||\n    error.type?.includes('encryption') ||\n    error.type?.includes('crypto') ||\n    error.message?.toLowerCase().includes('encryption') ||\n    error.message?.toLowerCase().includes('decrypt') ||\n    error.message?.toLowerCase().includes('crypto')\n  );\n};\n\nexport const getEncryptionErrorMessage = (error) => {\n  if (error.userFriendlyMessage) {\n    return error.userFriendlyMessage;\n  }\n\n  // Map technical errors to user-friendly messages\n  const errorMessage = error.message?.toLowerCase() || '';\n  \n  if (errorMessage.includes('key generation')) {\n    return 'Failed to generate encryption keys. Please try again.';\n  }\n  \n  if (errorMessage.includes('encrypt') && !errorMessage.includes('decrypt')) {\n    return 'Failed to encrypt message. Please check your connection and try again.';\n  }\n  \n  if (errorMessage.includes('decrypt')) {\n    return 'Unable to decrypt this message. It may be corrupted or sent with incompatible encryption.';\n  }\n  \n  if (errorMessage.includes('signature')) {\n    return 'Message authenticity could not be verified. This message may not be from the claimed sender.';\n  }\n  \n  if (errorMessage.includes('key exchange') || errorMessage.includes('public key')) {\n    return 'Failed to exchange encryption keys. Please refresh and try again.';\n  }\n  \n  if (errorMessage.includes('storage') || errorMessage.includes('localstorage')) {\n    return 'Failed to store encryption keys securely. Please check your browser settings.';\n  }\n  \n  if (errorMessage.includes('initialization') || errorMessage.includes('setup')) {\n    return 'Failed to initialize encryption. Please refresh the page and try again.';\n  }\n  \n  return 'An encryption error occurred. Please try again.';\n};\n\nexport const shouldRetryEncryptionError = (error, retryCount = 0, maxRetries = 3) => {\n  if (retryCount >= maxRetries) {\n    return false;\n  }\n\n  // Don't retry signature verification failures\n  if (error.type === 'signature_verification_failed' || \n      error.message?.toLowerCase().includes('signature')) {\n    return false;\n  }\n\n  // Retry network-related encryption errors\n  if (isNetworkError(error) || error.message?.toLowerCase().includes('fetch')) {\n    return true;\n  }\n\n  // Retry key exchange failures\n  if (error.message?.toLowerCase().includes('key exchange') ||\n      error.message?.toLowerCase().includes('public key')) {\n    return true;\n  }\n\n  // Retry key generation failures (up to 3 times)\n  if (error.message?.toLowerCase().includes('key generation')) {\n    return retryCount < 3;\n  }\n\n  // Retry storage failures\n  if (error.message?.toLowerCase().includes('storage')) {\n    return retryCount < 2;\n  }\n\n  // Don't retry decryption failures (data might be corrupted)\n  if (error.message?.toLowerCase().includes('decrypt')) {\n    return false;\n  }\n\n  // Retry other encryption errors once\n  if (isEncryptionError(error)) {\n    return retryCount < 1;\n  }\n\n  return shouldRetry(error, retryCount, maxRetries);\n};\n\nexport const retryEncryptionOperation = async (fn, maxRetries = 3, baseDelay = 1000) => {\n  let lastError;\n  \n  for (let i = 0; i <= maxRetries; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error;\n      \n      if (i === maxRetries || !shouldRetryEncryptionError(error, i, maxRetries)) {\n        // Enhance error with user-friendly message\n        if (isEncryptionError(error) && !error.userFriendlyMessage) {\n          error.userFriendlyMessage = getEncryptionErrorMessage(error);\n        }\n        throw error;\n      }\n      \n      // Exponential backoff with jitter, but shorter delays for encryption operations\n      const delay = Math.min(baseDelay * Math.pow(1.5, i) + Math.random() * 500, 5000);\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n  \n  throw lastError;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/utils/validation.js"],"sourcesContent":["/**\n * Input validation utilities\n */\n\nexport const ValidationRules = {\n  REQUIRED: 'required',\n  EMAIL: 'email',\n  MIN_LENGTH: 'minLength',\n  MAX_LENGTH: 'maxLength',\n  PATTERN: 'pattern',\n  CUSTOM: 'custom'\n};\n\nexport const validateRequired = (value) => {\n  if (value === null || value === undefined || value === '') {\n    return 'This field is required';\n  }\n  if (typeof value === 'string' && value.trim() === '') {\n    return 'This field is required';\n  }\n  return null;\n};\n\nexport const validateEmail = (email) => {\n  if (!email) return null;\n  \n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return 'Please enter a valid email address';\n  }\n  return null;\n};\n\nexport const validateMinLength = (value, minLength) => {\n  if (!value) return null;\n  \n  if (value.length < minLength) {\n    return `Must be at least ${minLength} characters long`;\n  }\n  return null;\n};\n\nexport const validateMaxLength = (value, maxLength) => {\n  if (!value) return null;\n  \n  if (value.length > maxLength) {\n    return `Must be no more than ${maxLength} characters long`;\n  }\n  return null;\n};\n\nexport const validatePattern = (value, pattern, message = 'Invalid format') => {\n  if (!value) return null;\n  \n  const regex = new RegExp(pattern);\n  if (!regex.test(value)) {\n    return message;\n  }\n  return null;\n};\n\nexport const sanitizeInput = (input) => {\n  if (typeof input !== 'string') return input;\n  \n  // Remove potentially dangerous characters\n  return input\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .replace(/<[^>]*>/g, '')\n    .trim();\n};\n\nexport const sanitizeMessage = (message) => {\n  if (typeof message !== 'string') return '';\n  \n  // Allow basic formatting but remove dangerous content\n  return message\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .replace(/javascript:/gi, '')\n    .replace(/on\\w+\\s*=/gi, '')\n    .trim();\n};\n\nexport const validateMessage = (message) => {\n  const errors = [];\n  \n  if (!message || message.trim() === '') {\n    errors.push('Message cannot be empty');\n  }\n  \n  if (message && message.length > 5000) {\n    errors.push('Message is too long (maximum 5000 characters)');\n  }\n  \n  // Check for spam patterns\n  const spamPatterns = [\n    /(.)\\1{10,}/, // Repeated characters\n    /https?:\\/\\/[^\\s]+/gi // URLs (you might want to allow these)\n  ];\n  \n  for (const pattern of spamPatterns) {\n    if (pattern.test(message)) {\n      // You might want to handle this differently\n      break;\n    }\n  }\n  \n  return errors;\n};\n\nexport const validateRoomId = (roomId) => {\n  if (!roomId) {\n    return 'Room ID is required';\n  }\n  \n  if (typeof roomId !== 'string') {\n    return 'Room ID must be a string';\n  }\n  \n  if (roomId.length < 1 || roomId.length > 50) {\n    return 'Room ID must be between 1 and 50 characters';\n  }\n  \n  // Allow alphanumeric, hyphens, and underscores\n  if (!/^[a-zA-Z0-9_-]+$/.test(roomId)) {\n    return 'Room ID can only contain letters, numbers, hyphens, and underscores';\n  }\n  \n  return null;\n};\n\nexport const validateUserId = (userId) => {\n  if (!userId) {\n    return 'User ID is required';\n  }\n  \n  if (typeof userId !== 'string' && typeof userId !== 'number') {\n    return 'User ID must be a string or number';\n  }\n  \n  return null;\n};\n\nexport const createValidator = (rules) => {\n  return (value) => {\n    const errors = [];\n    \n    for (const rule of rules) {\n      let error = null;\n      \n      switch (rule.type) {\n        case ValidationRules.REQUIRED:\n          error = validateRequired(value);\n          break;\n        case ValidationRules.EMAIL:\n          error = validateEmail(value);\n          break;\n        case ValidationRules.MIN_LENGTH:\n          error = validateMinLength(value, rule.value);\n          break;\n        case ValidationRules.MAX_LENGTH:\n          error = validateMaxLength(value, rule.value);\n          break;\n        case ValidationRules.PATTERN:\n          error = validatePattern(value, rule.pattern, rule.message);\n          break;\n        case ValidationRules.CUSTOM:\n          error = rule.validator(value);\n          break;\n        default:\n          break;\n      }\n      \n      if (error) {\n        errors.push(error);\n      }\n    }\n    \n    return errors;\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/services/websocket.js"],"sourcesContent":["import { io } from 'socket.io-client';\nimport { AppError, ErrorCodes, logError, retryWithBackoff } from '../utils/errorHandler';\nimport { validateMessage, validateRoomId, validateUserId, sanitizeMessage } from '../utils/validation';\n\nclass WebSocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.connectionCallbacks = [];\n    this.messageCallbacks = [];\n    this.roomCallbacks = [];\n    this.errorCallbacks = [];\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 3;\n    this.currentRoom = null;\n    this.pendingRoomJoin = null;\n    this.reconnectTimer = null;\n    this.connectionError = null;\n    this.pendingMessages = [];\n    this.isReconnecting = false;\n    this.typingCallbacks = [];\n    this.presenceCallbacks = [];\n    this.typingTimer = null;\n  }\n\n  /**\n   * Find available server port\n   */\n  findAvailableServer() {\n    // Try common ports the backend might be running on\n    const ports = [5000, 5001, 5002, 5003, 8000];\n    // For now, just return the first one - in a real app you'd test connectivity\n    return `http://localhost:${ports[0]}`;\n  }\n\n  /**\n   * Connect to the WebSocket server\n   */\n  connect(userId, token) {\n    if (this.socket && this.isConnected) {\n      console.log('WebSocket already connected');\n      return;\n    }\n\n    // Get server URL from environment or try common ports\n    const serverUrl = process.env.NEXT_PUBLIC_WEBSOCKET_URL || this.findAvailableServer();\n\n    this.socket = io(serverUrl, {\n      auth: {\n        user_id: userId,\n        userId, // Keep for backward compatibility\n        token\n      },\n      transports: ['websocket', 'polling'],\n      timeout: 20000,\n      withCredentials: true, // Important for session-based auth\n    });\n\n    this.setupEventListeners();\n  }\n\n  /**\n   * Disconnect from the WebSocket server\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n      this.reconnectAttempts = 0;\n      this.notifyConnectionStatus(false);\n    }\n  }\n\n  /**\n   * Join a specific chat room\n   */\n  joinRoom(roomId) {\n    if (!roomId) {\n      console.error('Cannot join room: roomId is required');\n      return;\n    }\n\n    if (this.socket && this.isConnected) {\n      // Get user_id from auth data stored during connection\n      const userId = this.socket.auth?.userId;\n      if (!userId) {\n        console.error('Cannot join room: userId not found in auth data');\n        this.pendingRoomJoin = roomId;\n        return;\n      }\n\n      console.log(`Joining room: ${roomId} with user: ${userId}`);\n      this.socket.emit('join_room', {\n        room_id: roomId,\n        user_id: userId\n      });\n      this.pendingRoomJoin = roomId;\n    } else {\n      console.log(`WebSocket not connected, storing room ${roomId} for later join`);\n      // Store the room to join once connected\n      this.pendingRoomJoin = roomId;\n    }\n  }\n\n  /**\n   * Leave a specific chat room\n   */\n  leaveRoom(roomId) {\n    if (this.socket && this.isConnected) {\n      // Get user_id from auth data stored during connection\n      const userId = this.socket.auth?.userId;\n      this.socket.emit('leave_room', {\n        room_id: roomId,\n        user_id: userId\n      });\n      if (this.currentRoom === roomId) {\n        this.currentRoom = null;\n        this.notifyRoomStatus(null);\n      }\n    } else {\n      console.error('Cannot leave room: WebSocket not connected');\n    }\n  }\n\n  /**\n   * Validate encrypted message data format\n   */\n  validateEncryptedMessageData(encryptionData) {\n    if (!encryptionData.is_encrypted) {\n      return null; // No validation needed for unencrypted messages\n    }\n\n    const errors = [];\n\n    if (!encryptionData.encrypted_aes_key) {\n      errors.push('Encrypted AES key is required for encrypted messages');\n    }\n\n    if (!encryptionData.iv) {\n      errors.push('Initialization vector (IV) is required for encrypted messages');\n    }\n\n    // Signature is optional but should be validated if present\n    if (encryptionData.signature && typeof encryptionData.signature !== 'string') {\n      errors.push('Message signature must be a string');\n    }\n\n    return errors.length > 0 ? errors[0] : null;\n  }\n\n  /**\n   * Send a message to a room\n   */\n  sendMessage(roomId, message, encryptionData = {}) {\n \n    try {\n      // Validate inputs\n      const roomError = validateRoomId(roomId);\n      if (roomError) {\n        throw new AppError(roomError, ErrorCodes.VALIDATION_ERROR);\n      }\n\n      const userError = validateUserId(this.socket?.auth?.userId);\n      if (userError) {\n        throw new AppError(userError, ErrorCodes.VALIDATION_ERROR);\n      }\n\n      const messageErrors = validateMessage(message);\n      if (messageErrors.length > 0) {\n        throw new AppError(messageErrors[0], ErrorCodes.VALIDATION_ERROR);\n      }\n\n      // Validate encryption data if message is encrypted\n      const encryptionError = this.validateEncryptedMessageData(encryptionData);\n      if (encryptionError) {\n        throw new AppError(encryptionError, ErrorCodes.VALIDATION_ERROR);\n      }\n\n      // Sanitize message content\n      const sanitizedMessage = sanitizeMessage(message);\n\n      const messageData = {\n        sender_id: this.socket.auth.userId,\n        room_id: roomId,\n        content: sanitizedMessage,\n        message_type: 'text',\n        id: `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`, // Unique ID for tracking\n        timestamp: new Date().toISOString(),\n        // Encryption fields\n        encrypted_aes_key: encryptionData.encrypted_aes_key || null,\n        iv: encryptionData.iv || null,\n        signature: encryptionData.signature || null,\n        is_encrypted: encryptionData.is_encrypted || false,\n        original_content: encryptionData.original_content || null\n      };\n\n      if (this.socket && this.isConnected) {\n        try {\n          this.socket.emit('send_message', messageData);\n          return { success: true, messageId: messageData.id };\n        } catch (error) {\n          const appError = new AppError('Failed to send message', ErrorCodes.WEBSOCKET_ERROR, { originalError: error });\n          logError(appError, { messageData });\n          this.notifyError(appError.message, 'send_message', { messageData, error: error.message });\n          return { success: false, error: appError.message, messageId: messageData.id };\n        }\n      } else {\n        // Queue message for retry when reconnected\n        this.pendingMessages.push(messageData);\n        const errorMsg = this.isReconnecting ? 'Reconnecting... Message will be sent when connected.' : 'WebSocket not connected';\n        this.notifyError(errorMsg, 'send_message', { messageData });\n        return { success: false, error: errorMsg, messageId: messageData.id, queued: true };\n      }\n    } catch (error) {\n      if (error instanceof AppError) {\n        logError(error, { roomId, message });\n        this.notifyError(error.message, 'send_message', error.details);\n        return { success: false, error: error.message };\n      } else {\n        const appError = new AppError('Unexpected error sending message', ErrorCodes.UNKNOWN_ERROR, { originalError: error });\n        logError(appError, { roomId, message });\n        this.notifyError(appError.message, 'send_message', appError.details);\n        return { success: false, error: appError.message };\n      }\n    }\n  }\n\n  /**\n   * Register callback for incoming messages\n   */\n  onMessage(callback) {\n    this.messageCallbacks.push(callback);\n  }\n\n  /**\n   * Register callback for connection status changes\n   */\n  onConnectionStatus(callback) {\n    this.connectionCallbacks.push(callback);\n  }\n\n  /**\n   * Register callback for room status changes\n   */\n  onRoomStatus(callback) {\n    this.roomCallbacks.push(callback);\n  }\n\n  /**\n   * Register callback for error notifications\n   */\n  onError(callback) {\n    this.errorCallbacks.push(callback);\n  }\n\n  /**\n   * Register callback for typing indicators\n   */\n  onTyping(callback) {\n    this.typingCallbacks.push(callback);\n  }\n\n  /**\n   * Register callback for presence updates\n   */\n  onPresence(callback) {\n    this.presenceCallbacks.push(callback);\n  }\n\n  /**\n   * Remove message callback\n   */\n  removeMessageCallback(callback) {\n    this.messageCallbacks = this.messageCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Remove connection status callback\n   */\n  removeConnectionCallback(callback) {\n    this.connectionCallbacks = this.connectionCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Remove room status callback\n   */\n  removeRoomCallback(callback) {\n    this.roomCallbacks = this.roomCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Remove error callback\n   */\n  removeErrorCallback(callback) {\n    this.errorCallbacks = this.errorCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Remove typing callback\n   */\n  removeTypingCallback(callback) {\n    this.typingCallbacks = this.typingCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Remove presence callback\n   */\n  removePresenceCallback(callback) {\n    this.presenceCallbacks = this.presenceCallbacks.filter(cb => cb !== callback);\n  }\n\n  /**\n   * Setup event listeners for the socket\n   */\n  setupEventListeners() {\n    if (!this.socket) return;\n\n    // Connection established\n    this.socket.on('connect', () => {\n      console.log('WebSocket connected');\n      this.isConnected = true;\n      this.isReconnecting = false;\n      this.reconnectAttempts = 0;\n      this.connectionError = null;\n\n      // Clear any existing reconnect timer\n      if (this.reconnectTimer) {\n        clearTimeout(this.reconnectTimer);\n        this.reconnectTimer = null;\n      }\n\n      this.notifyConnectionStatus(true);\n\n      // Auto-join pending room if any\n      if (this.pendingRoomJoin) {\n        const roomToJoin = this.pendingRoomJoin;\n        this.pendingRoomJoin = null; // Clear it first to avoid loops\n        setTimeout(() => {\n          this.joinRoom(roomToJoin);\n        }, 100);\n      }\n\n      // Send any pending messages\n      this.sendPendingMessages();\n    });\n\n    // Connection lost\n    this.socket.on('disconnect', (reason) => {\n      console.log('WebSocket disconnected:', reason);\n      this.isConnected = false;\n      this.connectionError = `Disconnected: ${reason}`;\n      this.notifyConnectionStatus(false, this.connectionError);\n\n      // Attempt reconnection if not manually disconnected\n      if (reason !== 'io client disconnect') {\n        this.isReconnecting = true;\n        this.attemptReconnection();\n      }\n    });\n\n    // Connection error\n    this.socket.on('connect_error', (error) => {\n      console.error('WebSocket connection error:', error);\n      this.isConnected = false;\n      this.connectionError = error.message || 'Connection failed';\n\n      // Provide more specific error messages\n      let userFriendlyError = 'Connection failed';\n      if (error.message?.includes('ECONNREFUSED')) {\n        userFriendlyError = 'Backend server is not running. Please start the backend server.';\n      } else if (error.message?.includes('timeout')) {\n        userFriendlyError = 'Connection timeout. Please check your network connection.';\n      } else if (error.message?.includes('unauthorized')) {\n        userFriendlyError = 'Authentication failed. Please log in again.';\n      }\n\n      this.notifyConnectionStatus(false, userFriendlyError);\n      this.notifyError(userFriendlyError, 'connect_error', { error: error.message });\n\n      if (!this.isReconnecting) {\n        this.isReconnecting = true;\n        this.attemptReconnection();\n      }\n    });\n\n    // Incoming messages\n    this.socket.on('new_message', (messageData) => {\n      this.messageCallbacks.forEach(callback => {\n        try {\n          callback(messageData);\n        } catch (error) {\n          console.error('Error in message callback:', error);\n        }\n      });\n    });\n\n    // Room joined confirmation\n    this.socket.on('room_joined', (data) => {\n      console.log('Joined room:', data.room_id);\n      this.currentRoom = data.room_id;\n      this.pendingRoomJoin = null;\n      this.notifyRoomStatus(data.room_id);\n    });\n\n    // Room left confirmation\n    this.socket.on('room_left', (data) => {\n      console.log('Left room:', data.room_id);\n      if (this.currentRoom === data.room_id) {\n        this.currentRoom = null;\n        this.notifyRoomStatus(null);\n      }\n    });\n\n    // Message sent confirmation\n    this.socket.on('message_sent', (data) => {\n      console.log('Message sent successfully:', data);\n    });\n\n    // Room join error handling\n    this.socket.on('room_join_error', (data) => {\n      console.error('Room join error:', data.message);\n      this.pendingRoomJoin = null;\n    });\n\n    // Room leave error handling\n    this.socket.on('room_leave_error', (data) => {\n      console.error('Room leave error:', data.message);\n    });\n\n    // Message error handling\n    this.socket.on('message_error', (data) => {\n      console.error('Message error:', data.message);\n      this.notifyError('Message failed to send', 'message_error', data);\n    });\n\n    // Typing indicators\n    this.socket.on('typing_indicator', (data) => {\n      this.typingCallbacks.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error('Error in typing callback:', error);\n        }\n      });\n    });\n\n    // Presence updates\n    this.socket.on('user_online', (data) => {\n      this.presenceCallbacks.forEach(callback => {\n        try {\n          callback({ ...data, status: 'online' });\n        } catch (error) {\n          console.error('Error in presence callback:', error);\n        }\n      });\n    });\n\n    this.socket.on('user_offline', (data) => {\n      this.presenceCallbacks.forEach(callback => {\n        try {\n          callback({ ...data, status: 'offline' });\n        } catch (error) {\n          console.error('Error in presence callback:', error);\n        }\n      });\n    });\n\n    // Message status updates\n    this.socket.on('message_status_update', (data) => {\n      this.messageCallbacks.forEach(callback => {\n        try {\n          callback({ ...data, type: 'status_update' });\n        } catch (error) {\n          console.error('Error in message status callback:', error);\n        }\n      });\n    });\n\n    // Online users list response\n    this.socket.on('online_users_list', (data) => {\n      console.log('WebSocketService: Received online users list:', data);\n      // This will be handled by components that listen for this event\n    });\n\n    // All users list response - Let components handle this directly\n    // Removed WebSocketService listener to avoid conflicts\n\n    // Direct message room created\n    this.socket.on('direct_message_created', (data) => {\n      console.log('Direct message room created:', data);\n      if (data.room_id) {\n        this.joinRoom(data.room_id);\n      }\n    });\n  }\n\n  /**\n   * Attempt to reconnect to the server\n   */\n  attemptReconnection() {\n    // Clear any existing timer\n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n      console.error('Max reconnection attempts reached');\n      this.isReconnecting = false;\n      this.connectionError = 'Max reconnection attempts reached. Please refresh the page.';\n      this.notifyConnectionStatus(false, this.connectionError);\n      this.notifyError('Connection failed permanently', 'max_reconnect_attempts', {\n        attempts: this.reconnectAttempts,\n        maxAttempts: this.maxReconnectAttempts\n      });\n      return;\n    }\n\n    this.reconnectAttempts++;\n    const delay = Math.min(Math.pow(2, this.reconnectAttempts) * 1000, 30000); // Exponential backoff, max 30s\n\n    console.log(`Attempting reconnection ${this.reconnectAttempts}/${this.maxReconnectAttempts} in ${delay}ms`);\n\n    this.connectionError = `Reconnecting... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`;\n    this.notifyConnectionStatus(false, this.connectionError);\n\n    this.reconnectTimer = setTimeout(() => {\n      if (this.socket && !this.isConnected) {\n        try {\n          this.socket.connect();\n        } catch (error) {\n          console.error('Reconnection attempt failed:', error);\n          this.attemptReconnection(); // Try again\n        }\n      }\n    }, delay);\n  }\n\n  /**\n   * Notify all connection status callbacks\n   */\n  notifyConnectionStatus(connected, error = null) {\n    this.connectionCallbacks.forEach(callback => {\n      try {\n        callback({ connected, error });\n      } catch (error) {\n        console.error('Error in connection status callback:', error);\n      }\n    });\n  }\n\n  /**\n   * Get current connection status\n   */\n  getConnectionStatus() {\n    return this.isConnected;\n  }\n\n  /**\n   * Get detailed connection info for debugging\n   */\n  getConnectionInfo() {\n    return {\n      isConnected: this.isConnected,\n      isReconnecting: this.isReconnecting,\n      reconnectAttempts: this.reconnectAttempts,\n      currentRoom: this.currentRoom,\n      pendingRoomJoin: this.pendingRoomJoin,\n      connectionError: this.connectionError,\n      hasSocket: !!this.socket,\n      socketConnected: this.socket?.connected,\n      socketId: this.socket?.id,\n      auth: this.socket?.auth\n    };\n  }\n\n  /**\n   * Test connection to backend server\n   */\n  async testConnection() {\n    const serverUrl = process.env.NEXT_PUBLIC_WEBSOCKET_URL || this.findAvailableServer();\n\n    try {\n      const response = await fetch(`${serverUrl}/health`, {\n        method: 'GET',\n        timeout: 5000\n      });\n      return {\n        success: response.ok,\n        status: response.status,\n        serverUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        serverUrl\n      };\n    }\n  }\n\n  /**\n   * Get current rooms\n   */\n  getCurrentRoom() {\n    return this.currentRoom;\n  }\n\n  /**\n   * Notify all room status callbacks\n   */\n  notifyRoomStatus(roomId) {\n    this.roomCallbacks.forEach(callback => {\n      try {\n        callback(roomId);\n      } catch (error) {\n        console.error('Error in room status callback:', error);\n      }\n    });\n  }\n\n  /**\n   * Notify all error callbacks\n   */\n  notifyError(message, type, details = {}) {\n    const errorData = {\n      message,\n      type,\n      details,\n      timestamp: new Date().toISOString()\n    };\n\n    this.errorCallbacks.forEach(callback => {\n      try {\n        callback(errorData);\n      } catch (error) {\n        console.error('Error in error callback:', error);\n      }\n    });\n  }\n\n  /**\n   * Send any pending messages that were queued during disconnection\n   */\n  sendPendingMessages() {\n    if (this.pendingMessages.length === 0) return;\n\n    console.log(`Sending ${this.pendingMessages.length} pending messages`);\n    const messagesToSend = [...this.pendingMessages];\n    this.pendingMessages = [];\n\n    messagesToSend.forEach(messageData => {\n      try {\n        this.socket.emit('send_message', messageData);\n      } catch (error) {\n        console.error('Failed to send pending message:', error);\n        // Re-queue the message if it fails\n        this.pendingMessages.push(messageData);\n        this.notifyError('Failed to send queued message', 'send_pending_message', { messageData, error: error.message });\n      }\n    });\n  }\n\n  /**\n   * Manually retry connection\n   */\n  retryConnection() {\n    if (this.isConnected) {\n      console.log('Already connected');\n      return;\n    }\n\n    // Reset reconnection attempts to allow manual retry\n    this.reconnectAttempts = 0;\n    this.isReconnecting = true;\n    this.connectionError = 'Retrying connection...';\n    this.notifyConnectionStatus(false, this.connectionError);\n\n    if (this.socket) {\n      try {\n        this.socket.connect();\n      } catch (error) {\n        console.error('Manual retry failed:', error);\n        this.attemptReconnection();\n      }\n    }\n  }\n\n  /**\n   * Get current connection error\n   */\n  getConnectionError() {\n    return this.connectionError;\n  }\n\n  /**\n   * Get pending messages count\n   */\n  getPendingMessagesCount() {\n    return this.pendingMessages.length;\n  }\n\n  /**\n   * Start typing indicator\n   */\n  startTyping(roomId) {\n    if (this.socket && this.isConnected) {\n      const userId = this.socket.auth?.userId;\n      this.socket.emit('typing_start', {\n        user_id: userId,\n        room_id: roomId\n      });\n    }\n  }\n\n  /**\n   * Stop typing indicator\n   */\n  stopTyping(roomId) {\n    if (this.socket && this.isConnected) {\n      const userId = this.socket.auth?.userId;\n      this.socket.emit('typing_stop', {\n        user_id: userId,\n        room_id: roomId\n      });\n    }\n  }\n\n  /**\n   * Handle typing with debounce\n   */\n  handleTyping(roomId, isTyping) {\n    if (isTyping) {\n      this.startTyping(roomId);\n\n      // Clear existing timer\n      if (this.typingTimer) {\n        clearTimeout(this.typingTimer);\n      }\n\n      // Set timer to stop typing after 3 seconds of inactivity\n      this.typingTimer = setTimeout(() => {\n        this.stopTyping(roomId);\n      }, 3000);\n    } else {\n      if (this.typingTimer) {\n        clearTimeout(this.typingTimer);\n        this.typingTimer = null;\n      }\n      this.stopTyping(roomId);\n    }\n  }\n\n  /**\n   * Mark message as delivered\n   */\n  markMessageDelivered(messageId) {\n    if (this.socket && this.isConnected) {\n      const userId = this.socket.auth?.userId;\n      this.socket.emit('message_delivered', {\n        message_id: messageId,\n        user_id: userId\n      });\n    }\n  }\n\n  /**\n   * Request list of online users\n   */\n  requestOnlineUsers() {\n    if (this.socket && this.isConnected) {\n      console.log('WebSocketService: Emitting get_online_users event');\n      this.socket.emit('get_online_users');\n    } else {\n      console.log('WebSocketService: Cannot request online users - socket not connected');\n    }\n  }\n\n  /**\n   * Request list of all users (online and offline)\n   */\n  requestAllUsers() {\n    if (this.socket && this.isConnected) {\n      console.log('WebSocketService: Emitting get_all_users event');\n      this.socket.emit('get_all_users');\n    } else {\n      console.log('WebSocketService: Cannot request all users - socket not connected');\n    }\n  }\n\n  /**\n   * Create or join a direct message room with another user\n   */\n  startDirectMessage(targetUserId) {\n    if (!targetUserId) {\n      console.error('Cannot start direct message: targetUserId is required');\n      return null;\n    }\n\n    // Get current user ID from socket auth or fallback\n    let currentUserId = this.socket?.auth?.userId;\n    \n    if (!currentUserId) {\n      console.warn('Current user ID not found in socket auth, using fallback');\n      // Try to get from other sources or generate a temporary ID\n      currentUserId = 'temp_user_' + Date.now();\n    }\n\n    // Generate consistent room ID for direct messages\n    const roomId = [currentUserId, targetUserId].sort().join('_');\n    \n    console.log('WebSocketService: Starting direct message', {\n      currentUserId,\n      targetUserId,\n      roomId,\n      isConnected: this.isConnected\n    });\n    \n    // If connected, join the room immediately\n    if (this.socket && this.isConnected) {\n      this.joinRoom(roomId);\n    } else {\n      console.warn('WebSocket not connected, room will be joined when connection is established');\n      // Store the room to join later\n      this.pendingRoomJoin = roomId;\n    }\n\n    return roomId;\n  }\n\n  /**\n   * Test connection to backend server\n   */\n  async testConnection() {\n    const serverUrl = process.env.NEXT_PUBLIC_WEBSOCKET_URL || this.findAvailableServer();\n    \n    try {\n      const response = await fetch(`${serverUrl}/health`, { \n        method: 'GET',\n        timeout: 5000 \n      });\n      return {\n        success: response.ok,\n        status: response.status,\n        serverUrl\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        serverUrl\n      };\n    }\n  }\n}\n\nconst websocketService = new WebSocketService();\n\n// Make it available globally for debugging\nif (typeof window !== 'undefined') {\n  window.websocketService = websocketService;\n}\n\nexport default websocketService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1334, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/services/encryptionManager.js"],"sourcesContent":["/**\n * EncryptionManager - Handles end-to-end encryption for messages\n */\n\nimport CryptoService from './cryptoService';\nimport keyExchangeService from './keyExchangeService';\n\nclass EncryptionManager {\n    constructor() {\n        this.isInitialized = false;\n        this.currentUserId = null;\n        this.currentToken = null;\n    }\n\n    /**\n     * Initialize encryption for the current user\n     */\n    async initialize(userId, token) {\n        try {\n            this.currentUserId = userId;\n            this.currentToken = token;\n\n            // Initialize keys\n            await keyExchangeService.initializeKeys(userId, token);\n            \n            this.isInitialized = true;\n            console.log('Encryption manager initialized');\n        } catch (error) {\n            console.error('Failed to initialize encryption:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Encrypt a message for sending\n     * For simplicity, we'll use a single AES key for the general room\n     */\n    async encryptMessage(message, roomId = 'general') {\n        try {\n            if (!this.isInitialized) {\n                throw new Error('Encryption not initialized');\n            }\n\n            // For this simple implementation, we'll use a fixed recipient\n            // In a real app, you'd get all room participants\n            const recipientIds = await this.getRoomParticipants(roomId);\n            \n            if (recipientIds.length === 0) {\n                // No other users, send as plain text\n                return {\n                    content: message,\n                    is_encrypted: false\n                };\n            }\n\n            // Generate AES key for this message\n            const aesKey = await CryptoService.generateAESKey();\n            \n            // Encrypt message with AES\n            const encryptedMessage = await CryptoService.encryptWithAES(message, aesKey);\n            \n            // For simplicity, encrypt AES key for the first recipient only\n            // In a real implementation, you'd encrypt for all recipients\n            const recipientId = recipientIds[0];\n            const recipientPublicKey = await keyExchangeService.getUserPublicKey(recipientId, this.currentToken);\n            const encryptedAESKey = await CryptoService.encryptWithRSA(aesKey, recipientPublicKey);\n\n            return {\n                content: encryptedMessage.encryptedData,\n                encrypted_aes_key: encryptedAESKey,\n                iv: encryptedMessage.iv,\n                is_encrypted: true\n            };\n\n        } catch (error) {\n            console.error('Failed to encrypt message:', error);\n            // Fallback to plain text\n            return {\n                content: message,\n                is_encrypted: false\n            };\n        }\n    }\n\n    /**\n     * Decrypt a received message\n     */\n    async decryptMessage(messageData) {\n        try {\n            if (!messageData.is_encrypted) {\n                return messageData.content;\n            }\n\n            if (!this.isInitialized) {\n                return '[Encryption not initialized]';\n            }\n\n            // Decrypt AES key with our private key\n            const myPrivateKey = keyExchangeService.getMyPrivateKey();\n            if (!myPrivateKey) {\n                return '[Private key not available]';\n            }\n\n            const aesKey = await CryptoService.decryptWithRSA(messageData.encrypted_aes_key, myPrivateKey);\n            \n            // Decrypt message with AES key\n            const decryptedMessage = await CryptoService.decryptWithAES(\n                messageData.content,\n                messageData.iv,\n                aesKey\n            );\n\n            return decryptedMessage;\n\n        } catch (error) {\n            console.error('Failed to decrypt message:', error);\n            return '[Failed to decrypt message]';\n        }\n    }\n\n    /**\n     * Get room participants (disabled - using new GitHub-based encryption)\n     */\n    async getRoomParticipants(roomId) {\n        // Always return empty to disable old encryption system\n        return [];\n    }\n\n    /**\n     * Check if encryption is available\n     */\n    isEncryptionAvailable() {\n        return this.isInitialized;\n    }\n\n    /**\n     * Get encryption status\n     */\n    getStatus() {\n        return {\n            initialized: this.isInitialized,\n            hasPrivateKey: keyExchangeService.getMyPrivateKey() !== null,\n            hasPublicKey: keyExchangeService.getMyPublicKey() !== null\n        };\n    }\n}\n\nconst encryptionManager = new EncryptionManager();\nexport default encryptionManager;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/hooks/useChat.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport websocketService from '../services/websocket';\nimport encryptionManager from '../services/encryptionManager';\nimport encryptionService from '../services/encryptionService';\n\n/**\n * chat project with end-to-end encryption\n * Modified to support user-initiated chats instead of auto-joining rooms\n */\nexport const useChat = (userId, token) => {\n    const [messages, setMessages] = useState([]);\n    const [isConnected, setIsConnected] = useState(false);\n    const [currentRoom, setCurrentRoom] = useState(null);\n    const [connectionError, setConnectionError] = useState(null);\n    const [lastError, setLastError] = useState(null);\n    const [pendingMessagesCount, setPendingMessagesCount] = useState(0);\n    const [encryptionStatus, setEncryptionStatus] = useState({ initialized: false });\n    const [typingUsers, setTypingUsers] = useState([]);\n    const [onlineUsers, setOnlineUsers] = useState(new Set());\n\n    // Handle incoming messages\n    const handleMessage = useCallback(async (messageData) => {\n        console.log('handleMessage: Processing message:', messageData);\n        console.log('handleMessage: messageData.sender_id:', messageData.sender_id, 'type:', typeof messageData.sender_id);\n        console.log('handleMessage: userId:', userId, 'type:', typeof userId);\n\n        let messageText;\n        let isEncrypted = true;\n        let encryptionError = null;\n        let signatureValid = true;\n        let decryptionErrorType = null;\n\n        // Check if this is our own message (sender) - ensure type matching\n       const isOwnMessage = String(messageData.sender_id) === String(userId);\n\n        console.log('handleMessage: isOwnMessage:', isOwnMessage);\n\n        try {\n            console.log('handleMessage: messageData.is_encrypted:', messageData.is_encrypted);\n            if (messageData.is_encrypted) {\n                isEncrypted = true;\n                console.log('handleMessage: Set isEncrypted to true');\n                \n                if (isOwnMessage) {\n                    console.log('handleMessage: This is our own encrypted message');\n                    console.log('handleMessage: messageData.original_content:', messageData.original_content);\n                    console.log('handleMessage: messageData.content:', messageData.content);\n                    messageText = messageData.original_content || messageData.content;\n                    console.log('handleMessage: Using messageText:', messageText);\n                    signatureValid = true;\n                    encryptionError = null;\n                } else {\n                    // Decrypt messages from other users\n                    console.log('handleMessage: Decrypting message from other user:', messageData.sender_id);\n                    \n                    // GitHub-based base64 decryption\n                    if (messageData.encrypted_aes_key === 'github_base64') {\n                        try {\n                            messageText = atob(messageData.content);\n                            console.log('handleMessage: GitHub base64 decryption successful:', messageText);\n                            signatureValid = true;\n                            encryptionError = null;\n                        } catch (decryptError) {\n                            console.error('handleMessage: Base64 decryption failed:', decryptError);\n                            messageText = messageData.content;\n                            encryptionError = 'Failed to decrypt message';\n                            signatureValid = false;\n                        }\n                    } else {\n                        // Fallback to other decryption methods\n                        try {\n                            messageText = await encryptionService.decryptMessage(messageData, messageData.sender_id);\n                        } catch (decryptError) {\n                            messageText = messageData.content;\n                            encryptionError = 'Decryption failed';\n                        }\n                    }\n                }\n            } else {\n                // Plain text message\n                messageText = messageData.content;\n                isEncrypted = true;\n            }\n\n            console.log('handleMessage: Message processed successfully');\n            console.log('handleMessage: Final isEncrypted value:', isEncrypted);\n            console.log('handleMessage: messageData.is_encrypted:', messageData.is_encrypted);\n        } catch (error) {\n            console.error('Error processing message:', error);\n            messageText = messageData.content || '[Error processing message]';\n            isEncrypted = messageData.is_encrypted || true;\n            encryptionError = 'Message processing error';\n            decryptionErrorType = 'processing_error';\n        }\n\n        const newMessage = {\n            id: messageData.id || `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            text: messageText,\n            sender: isOwnMessage ? 'me' : 'other',\n            senderName: messageData.sender_name || 'Unknown User',\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n            isEncrypted: messageData.is_encrypted || isEncrypted,\n            encryptionError: encryptionError,\n            signatureValid: signatureValid,\n            decryptionErrorType: decryptionErrorType\n        };\n        messageData.isEncrypted = messageData.isEncrypted || messageData.is_encrypted || false;\n\n        console.log('handleMessage: Adding message to state:', newMessage);\n        setMessages(prev => {\n            const exists = prev.find(msg => msg.id === newMessage.id);\n            if (exists) {\n                console.log('handleMessage: Message already exists, skipping:', newMessage.id);\n                return prev;\n            }\n            return [...prev, newMessage];\n        });\n    }, [userId]);\n\n    // Handle connection status\n    const handleConnectionStatus = useCallback((status) => {\n        setIsConnected(status.connected);\n        setConnectionError(status.error || null);\n\n        if (status.connected) {\n            setPendingMessagesCount(0);\n        } else {\n            setPendingMessagesCount(websocketService.getPendingMessagesCount());\n        }\n    }, []);\n\n    // Handle room status\n    const handleRoomStatus = useCallback((roomId) => {\n        setCurrentRoom(roomId);\n    }, []);\n\n    // Handle errors\n    const handleError = useCallback((errorData) => {\n        setLastError(errorData);\n\n        if (errorData.type === 'send_message') {\n            setPendingMessagesCount(websocketService.getPendingMessagesCount());\n        }\n\n        setTimeout(() => {\n            setLastError(null);\n        }, 5000);\n    }, []);\n\n    // Handle typing indicators\n    const handleTyping = useCallback((typingData) => {\n        setTypingUsers(prev => {\n            const filtered = prev.filter(user =>\n                user.user_id !== typingData.user_id || user.room_id !== typingData.room_id\n            );\n            if (typingData.is_typing) {\n                return [...filtered, typingData];\n            }\n            return filtered;\n        });\n    }, []);\n\n    // Handle presence updates\n    const handlePresence = useCallback((presenceData) => {\n        setOnlineUsers(prev => {\n            const newSet = new Set(prev);\n            if (presenceData.status === 'online') {\n                newSet.add(presenceData.user_id);\n            } else {\n                newSet.delete(presenceData.user_id);\n            }\n            return newSet;\n        });\n    }, []);\n\n    // Initialize encryption\n    useEffect(() => {\n        if (!userId || !token) return;\n\n        const initEncryption = async () => {\n            try {\n                await encryptionManager.initialize(userId, token);\n                setEncryptionStatus(encryptionManager.getStatus());\n            } catch (error) {\n                console.error('Failed to initialize encryption:', error);\n                setEncryptionStatus({ initialized: false, error: error.message });\n            }\n        };\n\n        initEncryption();\n    }, [userId, token]);\n\n    // Setup WebSocket connection\n    useEffect(() => {\n        if (!userId || !token) {\n            console.log('Missing required parameters for WebSocket connection:', { userId: !!userId, token: !!token });\n            return;\n        }\n\n        console.log('useChat: Setting up WebSocket callbacks');\n\n        websocketService.removeMessageCallback(handleMessage);\n        websocketService.removeConnectionCallback(handleConnectionStatus);\n        websocketService.removeRoomCallback(handleRoomStatus);\n        websocketService.removeErrorCallback(handleError);\n        websocketService.removeTypingCallback(handleTyping);\n        websocketService.removePresenceCallback(handlePresence);\n\n        websocketService.onMessage(handleMessage);\n        websocketService.onConnectionStatus(handleConnectionStatus);\n        websocketService.onRoomStatus(handleRoomStatus);\n        websocketService.onError(handleError);\n        websocketService.onTyping(handleTyping);\n        websocketService.onPresence(handlePresence);\n\n        websocketService.connect(userId, token);\n\n        return () => {\n            console.log('useChat: Cleaning up WebSocket callbacks');\n            websocketService.removeMessageCallback(handleMessage);\n            websocketService.removeConnectionCallback(handleConnectionStatus);\n            websocketService.removeRoomCallback(handleRoomStatus);\n            websocketService.removeErrorCallback(handleError);\n            websocketService.removeTypingCallback(handleTyping);\n            websocketService.removePresenceCallback(handlePresence);\n        };\n    }, [userId, token]);\n\n    // Start a chat with a specific user\n    const startChatWithUser = async (targetUserId) => {\n        if (!targetUserId) {\n            console.error('Cannot start chat: missing targetUserId');\n            return null;\n        }\n\n        if (!isConnected) {\n            console.warn('WebSocket not connected, attempting to create room anyway');\n        }\n\n        console.log('useChat: Starting chat with targetUserId:', targetUserId, 'currentUserId:', userId);\n\n        try {\n            const roomId = websocketService.startDirectMessage(targetUserId);\n\n            if (roomId) {\n                console.log('useChat: Direct message room created:', roomId);\n                return roomId;\n            } else {\n                console.error('useChat: Failed to create direct message room');\n                return null;\n            }\n        } catch (error) {\n            console.error('useChat: Error starting chat:', error);\n            return null;\n        }\n    };\n\n    // Send message function\n    const sendMessage = async (roomId, messageContent, encryptedMessageData = null) => {\n        console.log('useChat.sendMessage received:', { roomId, messageContent, encryptedMessageData });\n        \n        const trimmedMessage = encryptedMessageData?.original_content || \n                          (typeof messageContent === 'string' ? messageContent.trim() : '');\n        if (!trimmedMessage || !roomId) return;\n\n        try {\n            let messageData;\n\n            if (encryptedMessageData) {\n                messageData = {\n                    content: encryptedMessageData.content,\n                    encrypted_aes_key: encryptedMessageData.encrypted_aes_key,\n                    iv: encryptedMessageData.iv,\n                    signature: encryptedMessageData.signature,\n                    is_encrypted: encryptedMessageData.is_encrypted\n                };\n            } else {\n                const fallbackData = await encryptionManager.encryptMessage(trimmedMessage, roomId);\n                messageData = {\n                    content: fallbackData.content,\n                    encrypted_aes_key: fallbackData.encrypted_aes_key,\n                    iv: fallbackData.iv,\n                    is_encrypted: fallbackData.is_encrypted\n                };\n                console.log('fallbackData:', fallbackData);\n                console.log('messageData after fallback:', messageData);\n            }\n            console.log(' Sending encrypted message:', {\n  roomId,\n  content: messageData.content,\n  metadata: {\n    encrypted_aes_key: messageData.encrypted_aes_key,\n    iv: messageData.iv,\n    is_encrypted: messageData.is_encrypted,\n    signature: messageData.signature,\n    original_content: trimmedMessage\n  }\n});\n  if (!messageData || !messageData.content) {\n    console.error('No encrypted content to send. Aborting.', { messageData });\n    return;\n  }\n  \n\n            const result = websocketService.sendMessage(roomId, messageData.content, {\n                encrypted_aes_key: messageData.encrypted_aes_key,\n                iv: messageData.iv,\n                is_encrypted: messageData.is_encrypted,\n                signature: messageData.signature,\n                is_encrypted: messageData.is_encrypted,\n                original_content: trimmedMessage\n            });\n\n            // Message will be added when backend sends it back with original_content\n\n            setPendingMessagesCount(websocketService.getPendingMessagesCount());\n            return result;\n        } catch (error) {\n            console.error('Failed to send message:', error);\n            const result = websocketService.sendMessage(roomId, messageData.content);\n            \n            // Message will be added when backend sends it back\n            setPendingMessagesCount(websocketService.getPendingMessagesCount());\n            return result;\n        }\n    };\n\n    const retryConnection = () => {\n        websocketService.retryConnection();\n    };\n\n    const startTyping = (roomId) => {\n        if (roomId) {\n            websocketService.handleTyping(roomId, true);\n        }\n    };\n\n    const stopTyping = (roomId) => {\n        if (roomId) {\n            websocketService.handleTyping(roomId, false);\n        }\n    };\n\n    const getDebugInfo = () => {\n        return {\n            hookState: {\n                isConnected,\n                currentRoom,\n                connectionError,\n                lastError,\n                pendingMessagesCount\n            },\n            websocketInfo: websocketService.getConnectionInfo()\n        };\n    };\n\n    return {\n        messages,\n        isConnected,\n        currentRoom,\n        sendMessage,\n        startChatWithUser,\n        connectionError,\n        lastError,\n        pendingMessagesCount,\n        retryConnection,\n        encryptionStatus,\n        typingUsers,\n        onlineUsers,\n        startTyping,\n        stopTyping,\n        getDebugInfo\n    };\n};\n\nexport default useChat;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1825, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/hooks/usePerformance.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\n\nexport const usePerformance = (componentName) => {\n  const renderStartTime = useRef(null);\n  const renderCount = useRef(0);\n\n  useEffect(() => {\n    renderCount.current += 1;\n    renderStartTime.current = performance.now();\n\n    return () => {\n      if (renderStartTime.current) {\n        const renderTime = performance.now() - renderStartTime.current;\n        if (process.env.NODE_ENV === 'development' && renderTime > 16) {\n          console.warn(\n            `${componentName} render took ${renderTime.toFixed(2)}ms (render #${renderCount.current})`\n          );\n        }\n      }\n    };\n  });\n\n  const measureAsync = useCallback(async (operationName, asyncOperation) => {\n    const startTime = performance.now();\n    try {\n      const result = await asyncOperation();\n      const endTime = performance.now();\n      \n      if (process.env.NODE_ENV === 'development') {\n        console.log(`${componentName}.${operationName} took ${(endTime - startTime).toFixed(2)}ms`);\n      }\n      \n      return result;\n    } catch (error) {\n      const endTime = performance.now();\n      console.error(\n        `${componentName}.${operationName} failed after ${(endTime - startTime).toFixed(2)}ms:`,\n        error\n      );\n      throw error;\n    }\n  }, [componentName]);\n\n  const measureSync = useCallback((operationName, syncOperation) => {\n    const startTime = performance.now();\n    try {\n      const result = syncOperation();\n      const endTime = performance.now();\n      \n      if (process.env.NODE_ENV === 'development' && endTime - startTime > 5) {\n        console.warn(`${componentName}.${operationName} took ${(endTime - startTime).toFixed(2)}ms`);\n      }\n      \n      return result;\n    } catch (error) {\n      const endTime = performance.now();\n      console.error(\n        `${componentName}.${operationName} failed after ${(endTime - startTime).toFixed(2)}ms:`,\n        error\n      );\n      throw error;\n    }\n  }, [componentName]);\n\n  return { measureAsync, measureSync };\n};\n\nexport const useMemoryMonitor = () => {\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && 'memory' in performance) {\n      const logMemory = () => {\n        const memory = performance.memory;\n        console.log('Memory usage:', {\n          used: `${(memory.usedJSHeapSize / 1024 / 1024).toFixed(2)} MB`,\n          total: `${(memory.totalJSHeapSize / 1024 / 1024).toFixed(2)} MB`,\n          limit: `${(memory.jsHeapSizeLimit / 1024 / 1024).toFixed(2)} MB`\n        });\n      };\n\n      const interval = setInterval(logMemory, 30000); // Log every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, []);\n};\n\nexport const useConnectionMonitor = () => {\n  useEffect(() => {\n    const handleOnline = () => {\n      console.log('Connection restored');\n    };\n\n    const handleOffline = () => {\n      console.warn('Connection lost');\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return {\n    isOnline: typeof window !== 'undefined' ? navigator.onLine : true\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1927, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/EncryptionSettings.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useEffect } from 'react';\nimport { Shield, Key, AlertTriangle, Settings, X } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport { clsx } from 'clsx';\n\nexport default function EncryptionSettings({ isOpen, onClose }) {\n  const { getUserPreferences, updateUserPreferences, clearKeysManually } = useAuth();\n  const [preferences, setPreferences] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showClearConfirm, setShowClearConfirm] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      setPreferences(getUserPreferences());\n    }\n  }, [isOpen, getUserPreferences]);\n\n  const handlePreferenceChange = async (path, value) => {\n    try {\n      setLoading(true);\n      const newPrefs = { ...preferences };\n      \n      // Navigate to the nested property and update it\n      const keys = path.split('.');\n      let current = newPrefs;\n      for (let i = 0; i < keys.length - 1; i++) {\n        current = current[keys[i]];\n      }\n      current[keys[keys.length - 1]] = value;\n      \n      const updated = updateUserPreferences(newPrefs);\n      setPreferences(updated);\n    } catch (error) {\n      console.error('Failed to update preferences:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClearKeys = async () => {\n    try {\n      setLoading(true);\n      await clearKeysManually();\n      setShowClearConfirm(false);\n    } catch (error) {\n      console.error('Failed to clear keys:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isOpen || !preferences) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <div className=\"flex items-center space-x-3\">\n            <Shield className=\"h-6 w-6 text-blue-600\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              Encryption Settings\n            </h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Key Persistence Settings */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Key Management\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Clear keys on logout\n                  </label>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Remove encryption keys from this device when you log out\n                  </p>\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={preferences.encryption.clearKeysOnLogout}\n                  onChange={(e) => handlePreferenceChange('encryption.clearKeysOnLogout', e.target.checked)}\n                  disabled={loading}\n                  className=\"ml-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Keep keys across sessions\n                  </label>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Remember encryption keys between browser sessions\n                  </p>\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={preferences.encryption.keyPersistenceAcrossSessions}\n                  onChange={(e) => handlePreferenceChange('encryption.keyPersistenceAcrossSessions', e.target.checked)}\n                  disabled={loading}\n                  className=\"ml-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Auto-initialize keys\n                  </label>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Automatically set up encryption when you log in\n                  </p>\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={preferences.encryption.autoInitializeKeys}\n                  onChange={(e) => handlePreferenceChange('encryption.autoInitializeKeys', e.target.checked)}\n                  disabled={loading}\n                  className=\"ml-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* UI Settings */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Display Options\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Show encryption indicators\n                  </label>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Display lock icons for encrypted messages\n                  </p>\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={preferences.ui.showEncryptionIndicators}\n                  onChange={(e) => handlePreferenceChange('ui.showEncryptionIndicators', e.target.checked)}\n                  disabled={loading}\n                  className=\"ml-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n              </div>\n\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Show key setup progress\n                  </label>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Display progress when initializing encryption\n                  </p>\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={preferences.ui.showKeyInitializationProgress}\n                  onChange={(e) => handlePreferenceChange('ui.showKeyInitializationProgress', e.target.checked)}\n                  disabled={loading}\n                  className=\"ml-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Manual Key Management */}\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Manual Actions\n            </h3>\n            \n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertTriangle className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n                <div className=\"flex-1\">\n                  <h4 className=\"text-sm font-medium text-yellow-800\">\n                    Clear Encryption Keys\n                  </h4>\n                  <p className=\"text-xs text-yellow-700 mt-1\">\n                    Remove all encryption keys from this device. You&apos;ll need to generate new keys on next login.\n                  </p>\n                  <button\n                    onClick={() => setShowClearConfirm(true)}\n                    disabled={loading}\n                    className=\"mt-3 text-sm bg-yellow-600 text-white px-3 py-1 rounded hover:bg-yellow-700 disabled:opacity-50\"\n                  >\n                    Clear Keys\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-6 py-4 border-t bg-gray-50 rounded-b-lg\">\n          <div className=\"flex justify-end\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Clear Keys Confirmation Modal */}\n      {showClearConfirm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-60\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-sm w-full mx-4\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  Confirm Key Deletion\n                </h3>\n              </div>\n              <p className=\"text-sm text-gray-600 mb-6\">\n                Are you sure you want to clear all encryption keys? This action cannot be undone and you&apos;ll need to generate new keys on your next login.\n              </p>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setShowClearConfirm(false)}\n                  disabled={loading}\n                  className=\"flex-1 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleClearKeys}\n                  disabled={loading}\n                  className=\"flex-1 px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 disabled:opacity-50\"\n                >\n                  {loading ? 'Clearing...' : 'Clear Keys'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2527, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/ChatSidebar.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useEffect } from 'react';\nimport { Search, MessageCircle, Settings, LogOut, User, MoreVertical, Shield } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport { clsx } from 'clsx';\nimport EncryptionSettings from './EncryptionSettings';\n\nexport default function ChatSidebar({ selectedRoomId, onRoomSelect, currentUser, isMobile }) {\n  const { logout } = useAuth();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showEncryptionSettings, setShowEncryptionSettings] = useState(false);\n  \n  // Mock conversations - in a real app, this would come from an API\n  const [conversations] = useState([\n    {\n      id: 'general',\n      name: 'General Chat',\n      lastMessage: 'Welcome to the encrypted chat!',\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      unread: 0,\n      online: true,\n      isGroup: true,\n      avatar: '👥'\n    },\n    {\n      id: 'tech-talk',\n      name: 'Tech Talk',\n      lastMessage: 'Anyone working on React projects?',\n      timestamp: '2:30 PM',\n      unread: 2,\n      online: true,\n      isGroup: true,\n      avatar: '💻'\n    },\n    {\n      id: 'random',\n      name: 'Random',\n      lastMessage: 'Good morning everyone!',\n      timestamp: '9:15 AM',\n      unread: 0,\n      online: false,\n      isGroup: true,\n      avatar: '🎲'\n    }\n  ]);\n\n  const filteredConversations = conversations.filter(conv =>\n    conv.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    conv.lastMessage.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  const getUserInitials = (name) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  const formatTime = (timestamp) => {\n    if (timestamp.includes(':')) {\n      return timestamp;\n    }\n    return new Date(timestamp).toLocaleTimeString([], { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-white\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"relative\">\n              <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-semibold\">\n                {currentUser?.photoURL ? (\n                  <img \n                    src={currentUser.photoURL} \n                    alt=\"Profile\" \n                    className=\"w-10 h-10 rounded-full object-cover\"\n                  />\n                ) : (\n                  getUserInitials(currentUser?.displayName || 'User')\n                )}\n              </div>\n              <div className=\"absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 border-2 border-white rounded-full\"></div>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <h2 className=\"text-lg font-semibold text-gray-900 truncate\">\n                Chats\n              </h2>\n              <p className=\"text-sm text-gray-500 truncate\">\n                {currentUser?.displayName || currentUser?.email}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"relative\">\n            <button\n              onClick={() => setShowUserMenu(!showUserMenu)}\n              className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-full transition-colors\"\n            >\n              <MoreVertical className=\"w-5 h-5\" />\n            </button>\n            \n            {showUserMenu && (\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg border border-gray-200 z-10\">\n                <div className=\"py-1\">\n                  <button className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                    <User className=\"w-4 h-4 mr-3\" />\n                    Profile\n                  </button>\n                  <button \n                    onClick={() => {\n                      setShowEncryptionSettings(true);\n                      setShowUserMenu(false);\n                    }}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                  >\n                    <Shield className=\"w-4 h-4 mr-3\" />\n                    Encryption Settings\n                  </button>\n                  <button className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">\n                    <Settings className=\"w-4 h-4 mr-3\" />\n                    Settings\n                  </button>\n                  <hr className=\"my-1\" />\n                  <button \n                    onClick={handleLogout}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\n                  >\n                    <LogOut className=\"w-4 h-4 mr-3\" />\n                    Sign Out\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search conversations...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-2 bg-gray-100 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        </div>\n      </div>\n\n      {/* Conversations List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {filteredConversations.length === 0 ? (\n          <div className=\"p-4 text-center text-gray-500\">\n            <MessageCircle className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n            <p>No conversations found</p>\n            {searchQuery && (\n              <p className=\"text-sm mt-1\">Try a different search term</p>\n            )}\n          </div>\n        ) : (\n          filteredConversations.map(conv => (\n            <div\n              key={conv.id}\n              onClick={() => onRoomSelect(conv.id)}\n              className={clsx(\n                \"flex items-center p-4 hover:bg-gray-50 cursor-pointer border-b border-gray-100 transition-colors\",\n                {\n                  \"bg-blue-50 border-blue-200\": selectedRoomId === conv.id,\n                }\n              )}\n            >\n              <div className=\"relative flex-shrink-0\">\n                <div className=\"w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center text-lg\">\n                  {conv.avatar}\n                </div>\n                {conv.online && (\n                  <div className=\"absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 border-2 border-white rounded-full\"></div>\n                )}\n              </div>\n              \n              <div className=\"ml-3 flex-1 min-w-0\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className={clsx(\n                    \"text-sm font-medium truncate\",\n                    {\n                      \"text-blue-900\": selectedRoomId === conv.id,\n                      \"text-gray-900\": selectedRoomId !== conv.id,\n                    }\n                  )}>\n                    {conv.name}\n                  </h3>\n                  <span className=\"text-xs text-gray-500 ml-2 flex-shrink-0\">\n                    {formatTime(conv.timestamp)}\n                  </span>\n                </div>\n                \n                <div className=\"flex items-center justify-between mt-1\">\n                  <p className=\"text-sm text-gray-600 truncate\">\n                    {conv.lastMessage}\n                  </p>\n                  {conv.unread > 0 && (\n                    <span className=\"ml-2 bg-blue-600 text-white text-xs rounded-full px-2 py-1 min-w-[20px] text-center flex-shrink-0\">\n                      {conv.unread > 99 ? '99+' : conv.unread}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>🔒 End-to-end encrypted</span>\n          <span>{filteredConversations.length} chats</span>\n        </div>\n      </div>\n\n      {/* Encryption Settings Modal */}\n      <EncryptionSettings \n        isOpen={showEncryptionSettings}\n        onClose={() => setShowEncryptionSettings(false)}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3038, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/EncryptionErrorDisplay.js"],"sourcesContent":["\"use client\"\nimport React, { useState } from 'react';\nimport { AlertTriangle, RefreshCw, X, Lock, LockOpen, Shield, AlertCircle, Info } from 'lucide-react';\nimport { clsx } from 'clsx';\nimport { EncryptionErrorTypes } from '../services/encryptionService';\n\n/**\n * EncryptionErrorDisplay - Component for displaying encryption-related errors\n * with user-friendly messages and retry mechanisms\n */\nexport default function EncryptionErrorDisplay({ \n  error, \n  onRetry, \n  onDismiss, \n  showRetry = true,\n  compact = false,\n  className = \"\"\n}) {\n  const [isRetrying, setIsRetrying] = useState(false);\n\n  if (!error) return null;\n\n  const handleRetry = async () => {\n    if (!onRetry || isRetrying) return;\n    \n    setIsRetrying(true);\n    try {\n      await onRetry();\n    } catch (retryError) {\n      console.error('Retry failed:', retryError);\n    } finally {\n      setIsRetrying(false);\n    }\n  };\n\n  const getErrorIcon = (errorType) => {\n    switch (errorType) {\n      case EncryptionErrorTypes.KEY_GENERATION_FAILED:\n      case EncryptionErrorTypes.INITIALIZATION_FAILED:\n        return <Shield className=\"w-4 h-4\" />;\n      case EncryptionErrorTypes.ENCRYPTION_FAILED:\n        return <Lock className=\"w-4 h-4\" />;\n      case EncryptionErrorTypes.DECRYPTION_FAILED:\n        return <LockOpen className=\"w-4 h-4\" />;\n      case EncryptionErrorTypes.KEY_EXCHANGE_FAILED:\n        return <RefreshCw className=\"w-4 h-4\" />;\n      case EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED:\n        return <AlertTriangle className=\"w-4 h-4\" />;\n      default:\n        return <AlertCircle className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getErrorSeverity = (errorType) => {\n    switch (errorType) {\n      case EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED:\n        return 'warning';\n      case EncryptionErrorTypes.DECRYPTION_FAILED:\n      case EncryptionErrorTypes.ENCRYPTION_FAILED:\n      case EncryptionErrorTypes.KEY_GENERATION_FAILED:\n      case EncryptionErrorTypes.INITIALIZATION_FAILED:\n        return 'error';\n      case EncryptionErrorTypes.KEY_EXCHANGE_FAILED:\n      case EncryptionErrorTypes.STORAGE_FAILED:\n        return 'warning';\n      default:\n        return 'error';\n    }\n  };\n\n  const getErrorColors = (severity) => {\n    switch (severity) {\n      case 'warning':\n        return {\n          bg: 'bg-yellow-50',\n          border: 'border-yellow-200',\n          text: 'text-yellow-800',\n          icon: 'text-yellow-600',\n          button: 'bg-yellow-100 hover:bg-yellow-200 text-yellow-800'\n        };\n      case 'error':\n        return {\n          bg: 'bg-red-50',\n          border: 'border-red-200',\n          text: 'text-red-800',\n          icon: 'text-red-600',\n          button: 'bg-red-100 hover:bg-red-200 text-red-800'\n        };\n      default:\n        return {\n          bg: 'bg-gray-50',\n          border: 'border-gray-200',\n          text: 'text-gray-800',\n          icon: 'text-gray-600',\n          button: 'bg-gray-100 hover:bg-gray-200 text-gray-800'\n        };\n    }\n  };\n\n  const getRetryText = (errorType) => {\n    switch (errorType) {\n      case EncryptionErrorTypes.KEY_GENERATION_FAILED:\n      case EncryptionErrorTypes.INITIALIZATION_FAILED:\n        return 'Retry Setup';\n      case EncryptionErrorTypes.ENCRYPTION_FAILED:\n        return 'Retry Encryption';\n      case EncryptionErrorTypes.DECRYPTION_FAILED:\n        return 'Retry Decryption';\n      case EncryptionErrorTypes.KEY_EXCHANGE_FAILED:\n        return 'Retry Key Exchange';\n      case EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED:\n        return 'Verify Again';\n      default:\n        return 'Retry';\n    }\n  };\n\n  const getAdditionalInfo = (errorType) => {\n    switch (errorType) {\n      case EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED:\n        return \"The message was decrypted successfully, but we couldn't verify the sender's identity. This could mean the message was tampered with or sent from a different device.\";\n      case EncryptionErrorTypes.DECRYPTION_FAILED:\n        return \"This message couldn't be decrypted. It may have been sent with incompatible encryption or the data may be corrupted.\";\n      case EncryptionErrorTypes.KEY_EXCHANGE_FAILED:\n        return \"We couldn't get the encryption keys needed to secure your messages. Check your internet connection and try again.\";\n      case EncryptionErrorTypes.KEY_GENERATION_FAILED:\n        return \"Failed to generate encryption keys for your account. This is needed to secure your messages.\";\n      case EncryptionErrorTypes.ENCRYPTION_FAILED:\n        return \"Your message couldn't be encrypted before sending. For security, the message was not sent.\";\n      case EncryptionErrorTypes.INITIALIZATION_FAILED:\n        return \"Encryption setup failed. You can still send messages, but they won't be encrypted.\";\n      default:\n        return null;\n    }\n  };\n\n  const severity = getErrorSeverity(error.type);\n  const colors = getErrorColors(severity);\n  const icon = getErrorIcon(error.type);\n  const additionalInfo = getAdditionalInfo(error.type);\n\n  if (compact) {\n    return (\n      <div className={clsx(\n        \"flex items-center space-x-2 px-3 py-2 rounded-md text-sm\",\n        colors.bg,\n        colors.border,\n        colors.text,\n        \"border\",\n        className\n      )}>\n        <div className={colors.icon}>\n          {icon}\n        </div>\n        <span className=\"flex-1 min-w-0 truncate\">\n          {error.userFriendlyMessage || error.message}\n        </span>\n        {showRetry && onRetry && (\n          <button\n            onClick={handleRetry}\n            disabled={isRetrying}\n            className={clsx(\n              \"px-2 py-1 rounded text-xs font-medium transition-colors\",\n              colors.button,\n              isRetrying && \"opacity-50 cursor-not-allowed\"\n            )}\n          >\n            {isRetrying ? (\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"animate-spin rounded-full h-3 w-3 border-b border-current\"></div>\n                <span>Retrying...</span>\n              </div>\n            ) : (\n              getRetryText(error.type)\n            )}\n          </button>\n        )}\n        {onDismiss && (\n          <button\n            onClick={onDismiss}\n            className={clsx(\"hover:opacity-70 transition-opacity\", colors.icon)}\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(\n      \"rounded-lg border p-4\",\n      colors.bg,\n      colors.border,\n      className\n    )}>\n      <div className=\"flex items-start space-x-3\">\n        <div className={clsx(\"flex-shrink-0 mt-0.5\", colors.icon)}>\n          {icon}\n        </div>\n        \n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <h4 className={clsx(\"text-sm font-medium\", colors.text)}>\n                {error.userFriendlyMessage || error.message}\n              </h4>\n              \n              {additionalInfo && (\n                <div className={clsx(\"mt-2 text-sm opacity-90\", colors.text)}>\n                  <div className=\"flex items-start space-x-2\">\n                    <Info className=\"w-4 h-4 flex-shrink-0 mt-0.5 opacity-70\" />\n                    <p>{additionalInfo}</p>\n                  </div>\n                </div>\n              )}\n              \n              {process.env.NODE_ENV === 'development' && error.message !== error.userFriendlyMessage && (\n                <details className={clsx(\"mt-2 text-xs opacity-75\", colors.text)}>\n                  <summary className=\"cursor-pointer hover:opacity-100\">\n                    Technical Details\n                  </summary>\n                  <pre className=\"mt-1 p-2 bg-black bg-opacity-10 rounded text-xs overflow-auto\">\n                    {error.message}\n                    {error.timestamp && `\\nTime: ${new Date(error.timestamp).toLocaleString()}`}\n                  </pre>\n                </details>\n              )}\n            </div>\n            \n            {onDismiss && (\n              <button\n                onClick={onDismiss}\n                className={clsx(\n                  \"flex-shrink-0 ml-3 hover:opacity-70 transition-opacity\",\n                  colors.icon\n                )}\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            )}\n          </div>\n          \n          {showRetry && onRetry && (\n            <div className=\"mt-3 flex items-center space-x-2\">\n              <button\n                onClick={handleRetry}\n                disabled={isRetrying}\n                className={clsx(\n                  \"inline-flex items-center px-3 py-1.5 rounded-md text-sm font-medium transition-colors\",\n                  colors.button,\n                  isRetrying && \"opacity-50 cursor-not-allowed\"\n                )}\n              >\n                {isRetrying ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-3 w-3 border-b border-current mr-2\"></div>\n                    Retrying...\n                  </>\n                ) : (\n                  <>\n                    <RefreshCw className=\"w-3 h-3 mr-2\" />\n                    {getRetryText(error.type)}\n                  </>\n                )}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * EncryptionErrorBanner - Compact banner for displaying encryption errors\n */\nexport function EncryptionErrorBanner({ error, onRetry, onDismiss, className = \"\" }) {\n  return (\n    <EncryptionErrorDisplay\n      error={error}\n      onRetry={onRetry}\n      onDismiss={onDismiss}\n      compact={true}\n      className={className}\n    />\n  );\n}\n\n/**\n * EncryptionErrorModal - Modal dialog for critical encryption errors\n */\nexport function EncryptionErrorModal({ \n  error, \n  isOpen, \n  onRetry, \n  onDismiss, \n  onClose,\n  title = \"Encryption Error\"\n}) {\n  if (!isOpen || !error) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div className=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75\" onClick={onClose}></div>\n        \n        <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-lg\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              {title}\n            </h3>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n          \n          <EncryptionErrorDisplay\n            error={error}\n            onRetry={onRetry}\n            onDismiss={onDismiss}\n            showRetry={true}\n            className=\"mb-4\"\n          />\n          \n          <div className=\"flex justify-end space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3571, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/EncryptionStatusIndicator.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useEffect } from 'react';\nimport { Shield, Lock, LockOpen, AlertTriangle, CheckCircle, Clock, Settings, RefreshCw } from 'lucide-react';\nimport { clsx } from 'clsx';\nimport encryptionService from '../services/encryptionService';\nimport { EncryptionStatus } from '../services/encryptionService';\n\n/**\n * EncryptionStatusIndicator - Comprehensive encryption status display\n * Shows current encryption state with detailed information and controls\n */\nexport default function EncryptionStatusIndicator({\n    selectedUser,\n    compact = false,\n    showDetails = false,\n    onSettingsClick,\n    className = \"\"\n}) {\n    const [status, setStatus] = useState(null);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    // Update status periodically\n    useEffect(() => {\n        const updateStatus = () => {\n            const currentStatus = encryptionService.getEncryptionStatus();\n            setStatus(currentStatus);\n        };\n\n        updateStatus();\n        const interval = setInterval(updateStatus, 2000); // Update every 2 seconds\n\n        return () => clearInterval(interval);\n    }, []);\n\n    const handleRefresh = async () => {\n        setIsRefreshing(true);\n        try {\n            await encryptionService.refreshKeys();\n            const newStatus = encryptionService.getEncryptionStatus();\n            setStatus(newStatus);\n        } catch (error) {\n            console.error('Failed to refresh encryption:', error);\n        } finally {\n            setIsRefreshing(false);\n        }\n    };\n\n    const getStatusInfo = () => {\n        if (!status) {\n            return {\n                icon: Clock,\n                color: 'gray',\n                text: 'Loading...',\n                description: 'Checking encryption status'\n            };\n        }\n\n        switch (status.status) {\n            case EncryptionStatus.AVAILABLE:\n                if (selectedUser) {\n                    return {\n                        icon: Lock,\n                        color: 'green',\n                        text: 'Encrypted',\n                        description: `Messages are end-to-end encrypted for ${selectedUser.display_name || selectedUser.name || selectedUser.username}`\n                    };\n                } else {\n                    return {\n                        icon: Shield,\n                        color: 'blue',\n                        text: 'Ready',\n                        description: 'Encryption is ready - select a user to start encrypted chat'\n                    };\n                }\n\n            case EncryptionStatus.INITIALIZING:\n                return {\n                    icon: Clock,\n                    color: 'blue',\n                    text: 'Setting up...',\n                    description: 'Initializing encryption keys'\n                };\n\n            case EncryptionStatus.ERROR:\n                return {\n                    icon: AlertTriangle,\n                    color: 'red',\n                    text: 'Error',\n                    description: status.lastError?.userFriendlyMessage || 'Encryption error occurred'\n                };\n\n            case EncryptionStatus.UNAVAILABLE:\n            default:\n                return {\n                    icon: LockOpen,\n                    color: 'yellow',\n                    text: 'Not available',\n                    description: 'Encryption is not available - messages will be sent unencrypted'\n                };\n        }\n    };\n\n    const statusInfo = getStatusInfo();\n    const IconComponent = statusInfo.icon;\n\n    const getColorClasses = (color) => {\n        const colors = {\n            green: {\n                bg: 'bg-green-50',\n                border: 'border-green-200',\n                text: 'text-green-800',\n                icon: 'text-green-600',\n                button: 'bg-green-100 hover:bg-green-200 text-green-800'\n            },\n            blue: {\n                bg: 'bg-blue-50',\n                border: 'border-blue-200',\n                text: 'text-blue-800',\n                icon: 'text-blue-600',\n                button: 'bg-blue-100 hover:bg-blue-200 text-blue-800'\n            },\n            yellow: {\n                bg: 'bg-yellow-50',\n                border: 'border-yellow-200',\n                text: 'text-yellow-800',\n                icon: 'text-yellow-600',\n                button: 'bg-yellow-100 hover:bg-yellow-200 text-yellow-800'\n            },\n            red: {\n                bg: 'bg-red-50',\n                border: 'border-red-200',\n                text: 'text-red-800',\n                icon: 'text-red-600',\n                button: 'bg-red-100 hover:bg-red-200 text-red-800'\n            },\n            gray: {\n                bg: 'bg-gray-50',\n                border: 'border-gray-200',\n                text: 'text-gray-800',\n                icon: 'text-gray-600',\n                button: 'bg-gray-100 hover:bg-gray-200 text-gray-800'\n            }\n        };\n        return colors[color] || colors.gray;\n    };\n\n    const colors = getColorClasses(statusInfo.color);\n\n    if (compact) {\n        return (\n            <div\n                className={clsx(\n                    \"relative inline-flex items-center space-x-2 px-3 py-1.5 rounded-full text-sm border\",\n                    colors.bg,\n                    colors.border,\n                    colors.text,\n                    \"cursor-pointer\",\n                    className\n                )}\n                onMouseEnter={() => setShowTooltip(true)}\n                onMouseLeave={() => setShowTooltip(false)}\n                onClick={() => showDetails && onSettingsClick?.()}\n            >\n                <div className={clsx(\"flex-shrink-0\", colors.icon)}>\n                    {status?.status === EncryptionStatus.INITIALIZING ? (\n                        <div className=\"animate-spin rounded-full h-3 w-3 border-b border-current\"></div>\n                    ) : (\n                        <IconComponent className=\"w-3 h-3\" />\n                    )}\n                </div>\n                <span className=\"font-medium\">{statusInfo.text}</span>\n\n                {showTooltip && (\n                    <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 text-white text-xs rounded-lg whitespace-nowrap z-10\">\n                        {statusInfo.description}\n                        <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-t-gray-900\"></div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <div className={clsx(\n            \"flex items-center justify-between px-4 py-3 rounded-lg border\",\n            colors.bg,\n            colors.border,\n            className\n        )}>\n            <div className=\"flex items-center space-x-3\">\n                <div className={clsx(\"flex-shrink-0\", colors.icon)}>\n                    {status?.status === EncryptionStatus.INITIALIZING ? (\n                        <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-current\"></div>\n                    ) : (\n                        <IconComponent className=\"w-5 h-5\" />\n                    )}\n                </div>\n\n                <div className=\"flex-1 min-w-0\">\n                    <div className={clsx(\"text-sm font-medium\", colors.text)}>\n                        {statusInfo.text}\n                    </div>\n                    <div className={clsx(\"text-xs opacity-75\", colors.text)}>\n                        {statusInfo.description}\n                    </div>\n\n                    {/* Additional status details */}\n                    {showDetails && status && (\n                        <div className={clsx(\"mt-2 text-xs space-y-1\", colors.text)}>\n                            {status.keysInitialized && (\n                                <div className=\"flex items-center space-x-1\">\n                                    <CheckCircle className=\"w-3 h-3\" />\n                                    <span>Keys initialized</span>\n                                </div>\n                            )}\n\n                            {status.keyGenerationTime && (\n                                <div className=\"opacity-75\">\n                                    Keys generated: {new Date(status.keyGenerationTime).toLocaleString()}\n                                </div>\n                            )}\n\n                            {status.userId && (\n                                <div className=\"opacity-75\">\n                                    User ID: {status.userId}\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Action buttons */}\n            <div className=\"flex items-center space-x-2\">\n                {status?.status === EncryptionStatus.ERROR && (\n                    <button\n                        onClick={handleRefresh}\n                        disabled={isRefreshing}\n                        className={clsx(\n                            \"p-1.5 rounded-md text-xs font-medium transition-colors\",\n                            colors.button,\n                            isRefreshing && \"opacity-50 cursor-not-allowed\"\n                        )}\n                        title=\"Retry encryption setup\"\n                    >\n                        <RefreshCw className={clsx(\"w-3 h-3\", isRefreshing && \"animate-spin\")} />\n                    </button>\n                )}\n\n                {onSettingsClick && (\n                    <button\n                        onClick={onSettingsClick}\n                        className={clsx(\n                            \"p-1.5 rounded-md text-xs font-medium transition-colors\",\n                            colors.button\n                        )}\n                        title=\"Encryption settings\"\n                    >\n                        <Settings className=\"w-3 h-3\" />\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n}\n\n/**\n * EncryptionStatusBadge - Simple badge version for minimal space\n */\nexport function EncryptionStatusBadge({ selectedUser, className = \"\" }) {\n    return (\n        <EncryptionStatusIndicator\n            selectedUser={selectedUser}\n            compact={true}\n            className={className}\n        />\n    );\n}\n\n/**\n * EncryptionStatusPanel - Detailed panel version with full information\n */\nexport function EncryptionStatusPanel({ selectedUser, onSettingsClick, className = \"\" }) {\n    return (\n        <EncryptionStatusIndicator\n            selectedUser={selectedUser}\n            compact={false}\n            showDetails={true}\n            onSettingsClick={onSettingsClick}\n            className={className}\n        />\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3963, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/hooks/useEncryptionErrors.js"],"sourcesContent":["import { useState, useCallback, useRef } from 'react';\nimport { EncryptionErrorTypes } from '../services/encryptionService';\n\n/**\n * Hook for managing encryption errors with retry mechanisms and user-friendly handling\n */\nexport function useEncryptionErrors() {\n  const [errors, setErrors] = useState([]);\n  const [retryAttempts, setRetryAttempts] = useState({});\n  const retryTimeouts = useRef({});\n\n  // Maximum retry attempts for different error types\n  const MAX_RETRY_ATTEMPTS = {\n    [EncryptionErrorTypes.KEY_GENERATION_FAILED]: 3,\n    [EncryptionErrorTypes.ENCRYPTION_FAILED]: 2,\n    [EncryptionErrorTypes.DECRYPTION_FAILED]: 2,\n    [EncryptionErrorTypes.KEY_EXCHANGE_FAILED]: 3,\n    [EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED]: 1,\n    [EncryptionErrorTypes.STORAGE_FAILED]: 2,\n    [EncryptionErrorTypes.INITIALIZATION_FAILED]: 3\n  };\n\n  // Retry delays (in milliseconds) with exponential backoff\n  const getRetryDelay = (errorType, attemptCount) => {\n    const baseDelays = {\n      [EncryptionErrorTypes.KEY_GENERATION_FAILED]: 2000,\n      [EncryptionErrorTypes.ENCRYPTION_FAILED]: 1000,\n      [EncryptionErrorTypes.DECRYPTION_FAILED]: 500,\n      [EncryptionErrorTypes.KEY_EXCHANGE_FAILED]: 1500,\n      [EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED]: 500,\n      [EncryptionErrorTypes.STORAGE_FAILED]: 1000,\n      [EncryptionErrorTypes.INITIALIZATION_FAILED]: 2000\n    };\n\n    const baseDelay = baseDelays[errorType] || 1000;\n    return baseDelay * Math.pow(2, attemptCount - 1) + Math.random() * 500;\n  };\n\n  /**\n   * Add a new encryption error\n   */\n  const addError = useCallback((error) => {\n    const errorId = `${error.type}-${Date.now()}-${Math.random()}`;\n    const errorWithId = {\n      ...error,\n      id: errorId,\n      timestamp: error.timestamp || new Date()\n    };\n\n    setErrors(prev => [...prev, errorWithId]);\n    \n    // Initialize retry count\n    setRetryAttempts(prev => ({\n      ...prev,\n      [errorId]: 0\n    }));\n\n    return errorId;\n  }, []);\n\n  /**\n   * Remove an error by ID\n   */\n  const removeError = useCallback((errorId) => {\n    setErrors(prev => prev.filter(error => error.id !== errorId));\n    setRetryAttempts(prev => {\n      const newAttempts = { ...prev };\n      delete newAttempts[errorId];\n      return newAttempts;\n    });\n\n    // Clear any pending retry timeout\n    if (retryTimeouts.current[errorId]) {\n      clearTimeout(retryTimeouts.current[errorId]);\n      delete retryTimeouts.current[errorId];\n    }\n  }, []);\n\n  /**\n   * Clear all errors\n   */\n  const clearErrors = useCallback(() => {\n    // Clear all retry timeouts\n    Object.values(retryTimeouts.current).forEach(timeout => {\n      clearTimeout(timeout);\n    });\n    retryTimeouts.current = {};\n\n    setErrors([]);\n    setRetryAttempts({});\n  }, []);\n\n  /**\n   * Clear errors of a specific type\n   */\n  const clearErrorsOfType = useCallback((errorType) => {\n    setErrors(prev => {\n      const errorsToRemove = prev.filter(error => error.type === errorType);\n      errorsToRemove.forEach(error => {\n        if (retryTimeouts.current[error.id]) {\n          clearTimeout(retryTimeouts.current[error.id]);\n          delete retryTimeouts.current[error.id];\n        }\n      });\n      return prev.filter(error => error.type !== errorType);\n    });\n\n    setRetryAttempts(prev => {\n      const newAttempts = { ...prev };\n      Object.keys(newAttempts).forEach(errorId => {\n        const error = errors.find(e => e.id === errorId);\n        if (error && error.type === errorType) {\n          delete newAttempts[errorId];\n        }\n      });\n      return newAttempts;\n    });\n  }, [errors]);\n\n  /**\n   * Check if an error can be retried\n   */\n  const canRetry = useCallback((errorId) => {\n    const error = errors.find(e => e.id === errorId);\n    if (!error) return false;\n\n    const attempts = retryAttempts[errorId] || 0;\n    const maxAttempts = MAX_RETRY_ATTEMPTS[error.type] || 1;\n    \n    return attempts < maxAttempts;\n  }, [errors, retryAttempts]);\n\n  /**\n   * Retry an operation with exponential backoff\n   */\n  const retryOperation = useCallback(async (errorId, retryFunction) => {\n    const error = errors.find(e => e.id === errorId);\n    if (!error || !canRetry(errorId)) {\n      return false;\n    }\n\n    const currentAttempts = retryAttempts[errorId] || 0;\n    const newAttempts = currentAttempts + 1;\n\n    // Update retry count\n    setRetryAttempts(prev => ({\n      ...prev,\n      [errorId]: newAttempts\n    }));\n\n    try {\n      // Add delay before retry (except for first retry)\n      if (newAttempts > 1) {\n        const delay = getRetryDelay(error.type, newAttempts);\n        await new Promise(resolve => {\n          retryTimeouts.current[errorId] = setTimeout(resolve, delay);\n        });\n      }\n\n      // Attempt the retry\n      const result = await retryFunction();\n      \n      // If successful, remove the error\n      if (result) {\n        removeError(errorId);\n        return true;\n      }\n      \n      return false;\n    } catch (retryError) {\n      console.error(`Retry attempt ${newAttempts} failed for error ${errorId}:`, retryError);\n      \n      // If we've exhausted retries, update the error with the latest failure\n      if (newAttempts >= (MAX_RETRY_ATTEMPTS[error.type] || 1)) {\n        setErrors(prev => prev.map(e => \n          e.id === errorId \n            ? { \n                ...e, \n                message: retryError.message || e.message,\n                userFriendlyMessage: retryError.userFriendlyMessage || e.userFriendlyMessage,\n                lastRetryError: retryError,\n                retriesExhausted: true\n              }\n            : e\n        ));\n      }\n      \n      return false;\n    }\n  }, [errors, retryAttempts, canRetry, removeError]);\n\n  /**\n   * Get errors by type\n   */\n  const getErrorsByType = useCallback((errorType) => {\n    return errors.filter(error => error.type === errorType);\n  }, [errors]);\n\n  /**\n   * Get the most recent error of a specific type\n   */\n  const getLatestErrorOfType = useCallback((errorType) => {\n    const typeErrors = getErrorsByType(errorType);\n    return typeErrors.length > 0 ? typeErrors[typeErrors.length - 1] : null;\n  }, [getErrorsByType]);\n\n  /**\n   * Check if there are any critical errors that should block operations\n   */\n  const hasCriticalErrors = useCallback(() => {\n    const criticalTypes = [\n      EncryptionErrorTypes.INITIALIZATION_FAILED,\n      EncryptionErrorTypes.KEY_GENERATION_FAILED\n    ];\n    \n    return errors.some(error => \n      criticalTypes.includes(error.type) && \n      (retryAttempts[error.id] || 0) >= (MAX_RETRY_ATTEMPTS[error.type] || 1)\n    );\n  }, [errors, retryAttempts]);\n\n  /**\n   * Get summary of current error state\n   */\n  const getErrorSummary = useCallback(() => {\n    const summary = {\n      total: errors.length,\n      byType: {},\n      critical: hasCriticalErrors(),\n      canRetryAny: false\n    };\n\n    errors.forEach(error => {\n      if (!summary.byType[error.type]) {\n        summary.byType[error.type] = 0;\n      }\n      summary.byType[error.type]++;\n      \n      if (canRetry(error.id)) {\n        summary.canRetryAny = true;\n      }\n    });\n\n    return summary;\n  }, [errors, hasCriticalErrors, canRetry]);\n\n  /**\n   * Auto-retry errors that are suitable for automatic retry\n   */\n  const autoRetryErrors = useCallback(async (retryFunctions) => {\n    const autoRetryTypes = [\n      EncryptionErrorTypes.KEY_EXCHANGE_FAILED,\n      EncryptionErrorTypes.STORAGE_FAILED\n    ];\n\n    const autoRetryPromises = errors\n      .filter(error => \n        autoRetryTypes.includes(error.type) && \n        canRetry(error.id) &&\n        retryFunctions[error.type]\n      )\n      .map(error => \n        retryOperation(error.id, retryFunctions[error.type])\n      );\n\n    if (autoRetryPromises.length > 0) {\n      const results = await Promise.allSettled(autoRetryPromises);\n      const successCount = results.filter(result => \n        result.status === 'fulfilled' && result.value === true\n      ).length;\n      \n      return successCount;\n    }\n\n    return 0;\n  }, [errors, canRetry, retryOperation]);\n\n  return {\n    errors,\n    retryAttempts,\n    addError,\n    removeError,\n    clearErrors,\n    clearErrorsOfType,\n    canRetry,\n    retryOperation,\n    getErrorsByType,\n    getLatestErrorOfType,\n    hasCriticalErrors,\n    getErrorSummary,\n    autoRetryErrors\n  };\n}\n\nexport default useEncryptionErrors;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4230, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/services/encryptionErrorManager.js"],"sourcesContent":["/**\n * EncryptionErrorManager - Centralized management of encryption errors\n * with retry mechanisms and user-friendly error handling\n */\n\nimport { EncryptionErrorTypes } from './encryptionService';\nimport { retryEncryptionOperation, getEncryptionErrorMessage } from '../utils/errorHandler';\n\nclass EncryptionErrorManager {\n  constructor() {\n    this.errorListeners = new Set();\n    this.retryStrategies = new Map();\n    this.errorHistory = [];\n    this.maxHistorySize = 100;\n    \n    this.setupDefaultRetryStrategies();\n  }\n\n  /**\n   * Setup default retry strategies for different error types\n   */\n  setupDefaultRetryStrategies() {\n    // Key generation retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.KEY_GENERATION_FAILED, {\n      maxRetries: 3,\n      baseDelay: 2000,\n      shouldRetry: (error, attempt) => attempt < 3,\n      onRetry: (error, attempt) => {\n        console.log(`Retrying key generation (attempt ${attempt + 1}/3)`);\n      }\n    });\n\n    // Encryption failure retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.ENCRYPTION_FAILED, {\n      maxRetries: 2,\n      baseDelay: 1000,\n      shouldRetry: (error, attempt) => {\n        // Don't retry if it's a validation error\n        if (error.message?.includes('invalid') || error.message?.includes('format')) {\n          return false;\n        }\n        return attempt < 2;\n      },\n      onRetry: (error, attempt) => {\n        console.log(`Retrying message encryption (attempt ${attempt + 1}/2)`);\n      }\n    });\n\n    // Decryption failure retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.DECRYPTION_FAILED, {\n      maxRetries: 1,\n      baseDelay: 500,\n      shouldRetry: (error, attempt) => {\n        // Only retry once for potential network issues\n        return attempt < 1 && !error.message?.includes('corrupted');\n      },\n      onRetry: (error, attempt) => {\n        console.log(`Retrying message decryption (attempt ${attempt + 1}/1)`);\n      }\n    });\n\n    // Key exchange retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.KEY_EXCHANGE_FAILED, {\n      maxRetries: 3,\n      baseDelay: 1500,\n      shouldRetry: (error, attempt) => attempt < 3,\n      onRetry: (error, attempt) => {\n        console.log(`Retrying key exchange (attempt ${attempt + 1}/3)`);\n      }\n    });\n\n    // Signature verification - no retry (data integrity issue)\n    this.retryStrategies.set(EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED, {\n      maxRetries: 0,\n      baseDelay: 0,\n      shouldRetry: () => false,\n      onRetry: () => {}\n    });\n\n    // Storage failure retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.STORAGE_FAILED, {\n      maxRetries: 2,\n      baseDelay: 1000,\n      shouldRetry: (error, attempt) => attempt < 2,\n      onRetry: (error, attempt) => {\n        console.log(`Retrying key storage (attempt ${attempt + 1}/2)`);\n      }\n    });\n\n    // Initialization failure retry strategy\n    this.retryStrategies.set(EncryptionErrorTypes.INITIALIZATION_FAILED, {\n      maxRetries: 3,\n      baseDelay: 2000,\n      shouldRetry: (error, attempt) => attempt < 3,\n      onRetry: (error, attempt) => {\n        console.log(`Retrying encryption initialization (attempt ${attempt + 1}/3)`);\n      }\n    });\n  }\n\n  /**\n   * Add an error listener\n   */\n  addErrorListener(listener) {\n    this.errorListeners.add(listener);\n    return () => this.errorListeners.delete(listener);\n  }\n\n  /**\n   * Notify all error listeners\n   */\n  notifyErrorListeners(error, context = {}) {\n    this.errorListeners.forEach(listener => {\n      try {\n        listener(error, context);\n      } catch (listenerError) {\n        console.error('Error in encryption error listener:', listenerError);\n      }\n    });\n  }\n\n  /**\n   * Handle an encryption error with automatic retry logic\n   */\n  async handleError(error, retryFunction, context = {}) {\n    // Enhance error with user-friendly message if not present\n    if (!error.userFriendlyMessage) {\n      error.userFriendlyMessage = getEncryptionErrorMessage(error);\n    }\n\n    // Add to error history\n    this.addToHistory(error, context);\n\n    // Get retry strategy for this error type\n    const strategy = this.retryStrategies.get(error.type);\n    \n    if (!strategy || !retryFunction) {\n      // No retry strategy or function, just notify listeners\n      this.notifyErrorListeners(error, { ...context, canRetry: false });\n      throw error;\n    }\n\n    // Attempt retry with strategy\n    try {\n      const result = await this.executeWithRetry(\n        retryFunction,\n        error,\n        strategy,\n        context\n      );\n      \n      // Success - notify listeners of recovery\n      this.notifyErrorListeners(null, { \n        ...context, \n        recovered: true, \n        originalError: error \n      });\n      \n      return result;\n    } catch (finalError) {\n      // All retries failed - notify listeners\n      this.notifyErrorListeners(finalError, { \n        ...context, \n        canRetry: false,\n        retriesExhausted: true \n      });\n      throw finalError;\n    }\n  }\n\n  /**\n   * Execute a function with retry logic\n   */\n  async executeWithRetry(fn, originalError, strategy, context) {\n    let lastError = originalError;\n    \n    for (let attempt = 0; attempt <= strategy.maxRetries; attempt++) {\n      try {\n        // First attempt uses original function, retries use retry logic\n        if (attempt === 0) {\n          return await fn();\n        }\n        \n        // Check if we should retry\n        if (!strategy.shouldRetry(lastError, attempt - 1)) {\n          throw lastError;\n        }\n        \n        // Notify about retry attempt\n        strategy.onRetry(lastError, attempt - 1);\n        this.notifyErrorListeners(lastError, { \n          ...context, \n          retrying: true, \n          attempt: attempt,\n          maxAttempts: strategy.maxRetries + 1\n        });\n        \n        // Wait before retry\n        if (strategy.baseDelay > 0) {\n          const delay = strategy.baseDelay * Math.pow(1.5, attempt - 1) + Math.random() * 500;\n          await new Promise(resolve => setTimeout(resolve, Math.min(delay, 10000)));\n        }\n        \n        // Attempt retry\n        return await fn();\n        \n      } catch (error) {\n        lastError = error;\n        \n        // Enhance error with user-friendly message\n        if (!error.userFriendlyMessage) {\n          error.userFriendlyMessage = getEncryptionErrorMessage(error);\n        }\n        \n        // Add retry context\n        error.retryAttempt = attempt;\n        error.maxRetries = strategy.maxRetries;\n        \n        // Continue to next iteration or throw if max retries reached\n        if (attempt >= strategy.maxRetries) {\n          throw error;\n        }\n      }\n    }\n    \n    throw lastError;\n  }\n\n  /**\n   * Handle encryption operation with automatic error management\n   */\n  async handleEncryptionOperation(operation, operationType, context = {}) {\n    try {\n      return await operation();\n    } catch (error) {\n      // Determine error type if not set\n      if (!error.type) {\n        error.type = this.determineErrorType(error, operationType);\n      }\n      \n      // Create retry function\n      const retryFunction = () => operation();\n      \n      // Handle with retry logic\n      return await this.handleError(error, retryFunction, {\n        ...context,\n        operationType\n      });\n    }\n  }\n\n  /**\n   * Determine error type based on error message and operation type\n   */\n  determineErrorType(error, operationType) {\n    const message = error.message?.toLowerCase() || '';\n    \n    if (operationType === 'keyGeneration' || message.includes('key generation')) {\n      return EncryptionErrorTypes.KEY_GENERATION_FAILED;\n    }\n    \n    if (operationType === 'encryption' || (message.includes('encrypt') && !message.includes('decrypt'))) {\n      return EncryptionErrorTypes.ENCRYPTION_FAILED;\n    }\n    \n    if (operationType === 'decryption' || message.includes('decrypt')) {\n      return EncryptionErrorTypes.DECRYPTION_FAILED;\n    }\n    \n    if (operationType === 'keyExchange' || message.includes('key exchange') || message.includes('public key')) {\n      return EncryptionErrorTypes.KEY_EXCHANGE_FAILED;\n    }\n    \n    if (operationType === 'signature' || message.includes('signature')) {\n      return EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED;\n    }\n    \n    if (operationType === 'storage' || message.includes('storage')) {\n      return EncryptionErrorTypes.STORAGE_FAILED;\n    }\n    \n    if (operationType === 'initialization' || message.includes('initialization')) {\n      return EncryptionErrorTypes.INITIALIZATION_FAILED;\n    }\n    \n    // Default to encryption failed\n    return EncryptionErrorTypes.ENCRYPTION_FAILED;\n  }\n\n  /**\n   * Add error to history\n   */\n  addToHistory(error, context = {}) {\n    const historyEntry = {\n      error: {\n        type: error.type,\n        message: error.message,\n        userFriendlyMessage: error.userFriendlyMessage,\n        timestamp: error.timestamp || new Date()\n      },\n      context,\n      id: `${Date.now()}-${Math.random()}`\n    };\n    \n    this.errorHistory.unshift(historyEntry);\n    \n    // Limit history size\n    if (this.errorHistory.length > this.maxHistorySize) {\n      this.errorHistory = this.errorHistory.slice(0, this.maxHistorySize);\n    }\n  }\n\n  /**\n   * Get error history\n   */\n  getErrorHistory(limit = 10) {\n    return this.errorHistory.slice(0, limit);\n  }\n\n  /**\n   * Get error statistics\n   */\n  getErrorStats() {\n    const stats = {\n      total: this.errorHistory.length,\n      byType: {},\n      recent: this.errorHistory.slice(0, 10),\n      mostCommon: null\n    };\n    \n    // Count by type\n    this.errorHistory.forEach(entry => {\n      const type = entry.error.type;\n      stats.byType[type] = (stats.byType[type] || 0) + 1;\n    });\n    \n    // Find most common error type\n    let maxCount = 0;\n    Object.entries(stats.byType).forEach(([type, count]) => {\n      if (count > maxCount) {\n        maxCount = count;\n        stats.mostCommon = { type, count };\n      }\n    });\n    \n    return stats;\n  }\n\n  /**\n   * Clear error history\n   */\n  clearHistory() {\n    this.errorHistory = [];\n  }\n\n  /**\n   * Create a user-friendly error summary\n   */\n  createErrorSummary(errors) {\n    if (!errors || errors.length === 0) {\n      return null;\n    }\n    \n    const errorTypes = [...new Set(errors.map(e => e.type))];\n    \n    if (errorTypes.length === 1) {\n      const error = errors[0];\n      return {\n        title: this.getErrorTitle(error.type),\n        message: error.userFriendlyMessage || error.message,\n        canRetry: this.canRetryErrorType(error.type),\n        severity: this.getErrorSeverity(error.type)\n      };\n    }\n    \n    return {\n      title: 'Multiple Encryption Errors',\n      message: `${errors.length} encryption errors occurred. Please check your connection and try again.`,\n      canRetry: errors.some(e => this.canRetryErrorType(e.type)),\n      severity: 'error',\n      details: errors.map(e => ({\n        type: e.type,\n        message: e.userFriendlyMessage || e.message\n      }))\n    };\n  }\n\n  /**\n   * Get user-friendly error title\n   */\n  getErrorTitle(errorType) {\n    const titles = {\n      [EncryptionErrorTypes.KEY_GENERATION_FAILED]: 'Key Generation Failed',\n      [EncryptionErrorTypes.ENCRYPTION_FAILED]: 'Message Encryption Failed',\n      [EncryptionErrorTypes.DECRYPTION_FAILED]: 'Message Decryption Failed',\n      [EncryptionErrorTypes.KEY_EXCHANGE_FAILED]: 'Key Exchange Failed',\n      [EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED]: 'Signature Verification Failed',\n      [EncryptionErrorTypes.STORAGE_FAILED]: 'Key Storage Failed',\n      [EncryptionErrorTypes.INITIALIZATION_FAILED]: 'Encryption Setup Failed'\n    };\n    \n    return titles[errorType] || 'Encryption Error';\n  }\n\n  /**\n   * Check if error type can be retried\n   */\n  canRetryErrorType(errorType) {\n    const strategy = this.retryStrategies.get(errorType);\n    return strategy && strategy.maxRetries > 0;\n  }\n\n  /**\n   * Get error severity level\n   */\n  getErrorSeverity(errorType) {\n    const severities = {\n      [EncryptionErrorTypes.KEY_GENERATION_FAILED]: 'error',\n      [EncryptionErrorTypes.ENCRYPTION_FAILED]: 'error',\n      [EncryptionErrorTypes.DECRYPTION_FAILED]: 'error',\n      [EncryptionErrorTypes.KEY_EXCHANGE_FAILED]: 'warning',\n      [EncryptionErrorTypes.SIGNATURE_VERIFICATION_FAILED]: 'warning',\n      [EncryptionErrorTypes.STORAGE_FAILED]: 'warning',\n      [EncryptionErrorTypes.INITIALIZATION_FAILED]: 'error'\n    };\n    \n    return severities[errorType] || 'error';\n  }\n}\n\n// Export singleton instance\nconst encryptionErrorManager = new EncryptionErrorManager();\nexport default encryptionErrorManager;"],"names":[],"mappings":"AAAA;;;CAGC;;;AAED;AACA;;;AAEA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI;QAC1B,IAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAC,cAAc,GAAG;QAEtB,IAAI,CAAC,2BAA2B;IAClC;IAEA;;GAEC,GACD,8BAA8B;QAC5B,gCAAgC;QAChC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,EAAE;YACnE,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO,UAAY,UAAU;YAC3C,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,iCAAiC,EAAE,UAAU,EAAE,GAAG,CAAC;YAClE;QACF;QAEA,oCAAoC;QACpC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,EAAE;YAC/D,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO;gBACnB,yCAAyC;gBACzC,IAAI,MAAM,OAAO,EAAE,SAAS,cAAc,MAAM,OAAO,EAAE,SAAS,WAAW;oBAC3E,OAAO;gBACT;gBACA,OAAO,UAAU;YACnB;YACA,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,UAAU,EAAE,GAAG,CAAC;YACtE;QACF;QAEA,oCAAoC;QACpC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,EAAE;YAC/D,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO;gBACnB,+CAA+C;gBAC/C,OAAO,UAAU,KAAK,CAAC,MAAM,OAAO,EAAE,SAAS;YACjD;YACA,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,UAAU,EAAE,GAAG,CAAC;YACtE;QACF;QAEA,8BAA8B;QAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,mBAAmB,EAAE;YACjE,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO,UAAY,UAAU;YAC3C,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,+BAA+B,EAAE,UAAU,EAAE,GAAG,CAAC;YAChE;QACF;QAEA,2DAA2D;QAC3D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,6BAA6B,EAAE;YAC3E,YAAY;YACZ,WAAW;YACX,aAAa,IAAM;YACnB,SAAS,KAAO;QAClB;QAEA,iCAAiC;QACjC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,cAAc,EAAE;YAC5D,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO,UAAY,UAAU;YAC3C,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,UAAU,EAAE,GAAG,CAAC;YAC/D;QACF;QAEA,wCAAwC;QACxC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,EAAE;YACnE,YAAY;YACZ,WAAW;YACX,aAAa,CAAC,OAAO,UAAY,UAAU;YAC3C,SAAS,CAAC,OAAO;gBACf,QAAQ,GAAG,CAAC,CAAC,4CAA4C,EAAE,UAAU,EAAE,GAAG,CAAC;YAC7E;QACF;IACF;IAEA;;GAEC,GACD,iBAAiB,QAAQ,EAAE;QACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;QACxB,OAAO,IAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC1C;IAEA;;GAEC,GACD,qBAAqB,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE;QACxC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA;YAC1B,IAAI;gBACF,SAAS,OAAO;YAClB,EAAE,OAAO,eAAe;gBACtB,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACF;IACF;IAEA;;GAEC,GACD,MAAM,YAAY,KAAK,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC,EAAE;QACpD,0DAA0D;QAC1D,IAAI,CAAC,MAAM,mBAAmB,EAAE;YAC9B,MAAM,mBAAmB,GAAG,CAAA,GAAA,4HAAA,CAAA,4BAAyB,AAAD,EAAE;QACxD;QAEA,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,OAAO;QAEzB,yCAAyC;QACzC,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,IAAI;QAEpD,IAAI,CAAC,YAAY,CAAC,eAAe;YAC/B,uDAAuD;YACvD,IAAI,CAAC,oBAAoB,CAAC,OAAO;gBAAE,GAAG,OAAO;gBAAE,UAAU;YAAM;YAC/D,MAAM;QACR;QAEA,8BAA8B;QAC9B,IAAI;YACF,MAAM,SAAS,MAAM,IAAI,CAAC,gBAAgB,CACxC,eACA,OACA,UACA;YAGF,yCAAyC;YACzC,IAAI,CAAC,oBAAoB,CAAC,MAAM;gBAC9B,GAAG,OAAO;gBACV,WAAW;gBACX,eAAe;YACjB;YAEA,OAAO;QACT,EAAE,OAAO,YAAY;YACnB,wCAAwC;YACxC,IAAI,CAAC,oBAAoB,CAAC,YAAY;gBACpC,GAAG,OAAO;gBACV,UAAU;gBACV,kBAAkB;YACpB;YACA,MAAM;QACR;IACF;IAEA;;GAEC,GACD,MAAM,iBAAiB,EAAE,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE;QAC3D,IAAI,YAAY;QAEhB,IAAK,IAAI,UAAU,GAAG,WAAW,SAAS,UAAU,EAAE,UAAW;YAC/D,IAAI;gBACF,gEAAgE;gBAChE,IAAI,YAAY,GAAG;oBACjB,OAAO,MAAM;gBACf;gBAEA,2BAA2B;gBAC3B,IAAI,CAAC,SAAS,WAAW,CAAC,WAAW,UAAU,IAAI;oBACjD,MAAM;gBACR;gBAEA,6BAA6B;gBAC7B,SAAS,OAAO,CAAC,WAAW,UAAU;gBACtC,IAAI,CAAC,oBAAoB,CAAC,WAAW;oBACnC,GAAG,OAAO;oBACV,UAAU;oBACV,SAAS;oBACT,aAAa,SAAS,UAAU,GAAG;gBACrC;gBAEA,oBAAoB;gBACpB,IAAI,SAAS,SAAS,GAAG,GAAG;oBAC1B,MAAM,QAAQ,SAAS,SAAS,GAAG,KAAK,GAAG,CAAC,KAAK,UAAU,KAAK,KAAK,MAAM,KAAK;oBAChF,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,KAAK,GAAG,CAAC,OAAO;gBACnE;gBAEA,gBAAgB;gBAChB,OAAO,MAAM;YAEf,EAAE,OAAO,OAAO;gBACd,YAAY;gBAEZ,2CAA2C;gBAC3C,IAAI,CAAC,MAAM,mBAAmB,EAAE;oBAC9B,MAAM,mBAAmB,GAAG,CAAA,GAAA,4HAAA,CAAA,4BAAyB,AAAD,EAAE;gBACxD;gBAEA,oBAAoB;gBACpB,MAAM,YAAY,GAAG;gBACrB,MAAM,UAAU,GAAG,SAAS,UAAU;gBAEtC,6DAA6D;gBAC7D,IAAI,WAAW,SAAS,UAAU,EAAE;oBAClC,MAAM;gBACR;YACF;QACF;QAEA,MAAM;IACR;IAEA;;GAEC,GACD,MAAM,0BAA0B,SAAS,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC,EAAE;QACtE,IAAI;YACF,OAAO,MAAM;QACf,EAAE,OAAO,OAAO;YACd,kCAAkC;YAClC,IAAI,CAAC,MAAM,IAAI,EAAE;gBACf,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO;YAC9C;YAEA,wBAAwB;YACxB,MAAM,gBAAgB,IAAM;YAE5B,0BAA0B;YAC1B,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,eAAe;gBAClD,GAAG,OAAO;gBACV;YACF;QACF;IACF;IAEA;;GAEC,GACD,mBAAmB,KAAK,EAAE,aAAa,EAAE;QACvC,MAAM,UAAU,MAAM,OAAO,EAAE,iBAAiB;QAEhD,IAAI,kBAAkB,mBAAmB,QAAQ,QAAQ,CAAC,mBAAmB;YAC3E,OAAO,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB;QACnD;QAEA,IAAI,kBAAkB,gBAAiB,QAAQ,QAAQ,CAAC,cAAc,CAAC,QAAQ,QAAQ,CAAC,YAAa;YACnG,OAAO,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB;QAC/C;QAEA,IAAI,kBAAkB,gBAAgB,QAAQ,QAAQ,CAAC,YAAY;YACjE,OAAO,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB;QAC/C;QAEA,IAAI,kBAAkB,iBAAiB,QAAQ,QAAQ,CAAC,mBAAmB,QAAQ,QAAQ,CAAC,eAAe;YACzG,OAAO,oIAAA,CAAA,uBAAoB,CAAC,mBAAmB;QACjD;QAEA,IAAI,kBAAkB,eAAe,QAAQ,QAAQ,CAAC,cAAc;YAClE,OAAO,oIAAA,CAAA,uBAAoB,CAAC,6BAA6B;QAC3D;QAEA,IAAI,kBAAkB,aAAa,QAAQ,QAAQ,CAAC,YAAY;YAC9D,OAAO,oIAAA,CAAA,uBAAoB,CAAC,cAAc;QAC5C;QAEA,IAAI,kBAAkB,oBAAoB,QAAQ,QAAQ,CAAC,mBAAmB;YAC5E,OAAO,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB;QACnD;QAEA,+BAA+B;QAC/B,OAAO,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB;IAC/C;IAEA;;GAEC,GACD,aAAa,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE;QAChC,MAAM,eAAe;YACnB,OAAO;gBACL,MAAM,MAAM,IAAI;gBAChB,SAAS,MAAM,OAAO;gBACtB,qBAAqB,MAAM,mBAAmB;gBAC9C,WAAW,MAAM,SAAS,IAAI,IAAI;YACpC;YACA;YACA,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,IAAI;QACtC;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAE1B,qBAAqB;QACrB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE;YAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,cAAc;QACpE;IACF;IAEA;;GAEC,GACD,gBAAgB,QAAQ,EAAE,EAAE;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG;IACpC;IAEA;;GAEC,GACD,gBAAgB;QACd,MAAM,QAAQ;YACZ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM;YAC/B,QAAQ,CAAC;YACT,QAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG;YACnC,YAAY;QACd;QAEA,gBAAgB;QAChB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;YACxB,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI;YAC7B,MAAM,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI;QACnD;QAEA,8BAA8B;QAC9B,IAAI,WAAW;QACf,OAAO,OAAO,CAAC,MAAM,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM;YACjD,IAAI,QAAQ,UAAU;gBACpB,WAAW;gBACX,MAAM,UAAU,GAAG;oBAAE;oBAAM;gBAAM;YACnC;QACF;QAEA,OAAO;IACT;IAEA;;GAEC,GACD,eAAe;QACb,IAAI,CAAC,YAAY,GAAG,EAAE;IACxB;IAEA;;GAEC,GACD,mBAAmB,MAAM,EAAE;QACzB,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;YAClC,OAAO;QACT;QAEA,MAAM,aAAa;eAAI,IAAI,IAAI,OAAO,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;SAAG;QAExD,IAAI,WAAW,MAAM,KAAK,GAAG;YAC3B,MAAM,QAAQ,MAAM,CAAC,EAAE;YACvB,OAAO;gBACL,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI;gBACpC,SAAS,MAAM,mBAAmB,IAAI,MAAM,OAAO;gBACnD,UAAU,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI;gBAC3C,UAAU,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI;YAC5C;QACF;QAEA,OAAO;YACL,OAAO;YACP,SAAS,GAAG,OAAO,MAAM,CAAC,wEAAwE,CAAC;YACnG,UAAU,OAAO,IAAI,CAAC,CAAA,IAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI;YACxD,UAAU;YACV,SAAS,OAAO,GAAG,CAAC,CAAA,IAAK,CAAC;oBACxB,MAAM,EAAE,IAAI;oBACZ,SAAS,EAAE,mBAAmB,IAAI,EAAE,OAAO;gBAC7C,CAAC;QACH;IACF;IAEA;;GAEC,GACD,cAAc,SAAS,EAAE;QACvB,MAAM,SAAS;YACb,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,CAAC,EAAE;YAC9C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,EAAE;YAC1C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,EAAE;YAC1C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,mBAAmB,CAAC,EAAE;YAC5C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,6BAA6B,CAAC,EAAE;YACtD,CAAC,oIAAA,CAAA,uBAAoB,CAAC,cAAc,CAAC,EAAE;YACvC,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,CAAC,EAAE;QAChD;QAEA,OAAO,MAAM,CAAC,UAAU,IAAI;IAC9B;IAEA;;GAEC,GACD,kBAAkB,SAAS,EAAE;QAC3B,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;QAC1C,OAAO,YAAY,SAAS,UAAU,GAAG;IAC3C;IAEA;;GAEC,GACD,iBAAiB,SAAS,EAAE;QAC1B,MAAM,aAAa;YACjB,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,CAAC,EAAE;YAC9C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,EAAE;YAC1C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,EAAE;YAC1C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,mBAAmB,CAAC,EAAE;YAC5C,CAAC,oIAAA,CAAA,uBAAoB,CAAC,6BAA6B,CAAC,EAAE;YACtD,CAAC,oIAAA,CAAA,uBAAoB,CAAC,cAAc,CAAC,EAAE;YACvC,CAAC,oIAAA,CAAA,uBAAoB,CAAC,qBAAqB,CAAC,EAAE;QAChD;QAEA,OAAO,UAAU,CAAC,UAAU,IAAI;IAClC;AACF;AAEA,4BAA4B;AAC5B,MAAM,yBAAyB,IAAI;uCACpB","debugId":null}},
    {"offset": {"line": 4600, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/ChatMain.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ArrowLeft, Phone, Video, MoreVertical, Send, Paperclip, Smile, Check, CheckCheck, Clock, AlertCircle, Wifi, WifiOff, MessageCircle, Lock, LockOpen, AlertTriangle } from 'lucide-react';\nimport { clsx } from 'clsx';\nimport encryptionService from '../services/encryptionService';\nimport EncryptionErrorDisplay, { EncryptionErrorBanner } from './EncryptionErrorDisplay';\nimport { EncryptionStatusPanel } from './EncryptionStatusIndicator';\nimport useEncryptionErrors from '../hooks/useEncryptionErrors';\nimport encryptionErrorManager from '../services/encryptionErrorManager';\n\nexport default function ChatMain({\n  messages,\n  isConnected,\n  currentRoom,\n  selectedRoomId,\n  selectedUser,\n  sendMessage,\n  connectionError,\n  lastError,\n  pendingMessagesCount,\n  retryConnection,\n  encryptionStatus,\n  currentUser,\n  isMobile,\n  onBackToList,\n  typingUsers = [],\n  onlineUsers = new Set(),\n  startTyping,\n  stopTyping\n}) {\n  const [messageInput, setMessageInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [encryptionError, setEncryptionError] = useState(null);\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const messageEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Enhanced encryption error management\n  const {\n    errors: encryptionErrors,\n    addError: addEncryptionError,\n    removeError: removeEncryptionError,\n    clearErrors: clearEncryptionErrors,\n    canRetry,\n    retryOperation\n  } = useEncryptionErrors();\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Focus input when room changes\n  useEffect(() => {\n    if (inputRef.current && !isMobile) {\n      inputRef.current.focus();\n    }\n  }, [selectedRoomId, isMobile]);\n\n  const [isSending, setIsSending] = useState(false);\n\n  const handleSendMessage = async () => {\n    if (messageInput.trim() && !isSending) {\n      setIsSending(true);\n      setIsEncrypting(true);\n      setEncryptionError(null);\n      \n      try {\n        // Simple GitHub-based base64 encryption\n        let messageData = null;\n        \n        if (selectedUser?.github_username) {\n          try {\n            console.log('Fetching GitHub public key for:', selectedUser.github_username);\n            \n            // Fetch public key from GitHub\n            const response = await fetch(`https://api.github.com/users/${selectedUser.github_username}/keys`);\n            \n            if (response.ok) {\n              const keys = await response.json();\n              \n              if (keys.length > 0) {\n                console.log('Found', keys.length, 'SSH keys on GitHub');\n                \n                // Simple base64 encryption with GitHub verification\n                const encryptedContent = btoa(messageInput.trim());\n                const signature = btoa(`signed_by_${selectedUser.github_username}`);\n                \n                messageData = {\n                  content: encryptedContent,\n                  encrypted_aes_key: 'github_base64',\n                  iv: 'github_iv',\n                  signature: signature,\n                  is_encrypted: true,\n                  original_content: messageInput.trim()\n                };\n                \n                console.log(' Message encrypted with GitHub-based base64');\n              } else {\n                throw new Error('No SSH keys found on GitHub');\n              }\n            } else {\n              throw new Error(`GitHub API returned ${response.status}`);\n            }\n          } catch (encryptError) {\n            console.error(' GitHub encryption failed:', encryptError);\n            setEncryptionError(encryptError);\n          }\n        } else {\n          console.log('No GitHub username, sending plain text');\n        }\n        \n        setIsEncrypting(false);\n        console.log('About to send:', { messageData, hasContent: !!messageData?.content });\n        console.log('ChatMain calling sendMessage with:', { selectedRoomId, messageInput, messageData });\n        // Send the message with proper parameters\n        const result = await sendMessage(selectedRoomId, messageInput.trim(), messageData);\n        if (result?.success || result?.queued) {\n          setMessageInput('');\n          setEncryptionError(null);\n          clearEncryptionErrors(); // Clear any previous errors on success\n        }\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setEncryptionError({\n          type: 'send_failed',\n          message: error.message,\n          userFriendlyMessage: 'Failed to send message. Please try again.'\n        });\n      } finally {\n        setIsEncrypting(false);\n        // Add a small delay to prevent double-sending\n        setTimeout(() => {\n          setIsSending(false);\n        }, 500);\n      }\n    }\n  };\n\n  // Handle encryption error retry\n  const handleEncryptionRetry = async (errorId) => {\n    const error = encryptionErrors.find(e => e.id === errorId);\n    if (!error) return false;\n\n    try {\n      if (error.type === 'encryption_failed') {\n        // Retry message encryption\n        return await retryOperation(errorId, async () => {\n          const recipientGithubUsername = selectedUser.github_username;\n          if (!recipientGithubUsername) {\n            throw new Error(`User ${selectedUser.display_name || selectedUser.name} does not have a GitHub username`);\n          }\n          \n          const messageData = await encryptionService.encryptMessage(\n            messageInput.trim(), \n            recipientGithubUsername\n          );\n          return messageData;\n        });\n      } else if (error.type === 'initialization_failed') {\n        // Retry encryption initialization\n        return await retryOperation(errorId, async () => {\n          return await encryptionService.initialize(currentUser.id, currentUser.token);\n        });\n      }\n      \n      return false;\n    } catch (retryError) {\n      console.error('Encryption retry failed:', retryError);\n      return false;\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setMessageInput(value);\n\n    // Handle typing indicators\n    if (value.trim() && !isTyping && startTyping) {\n      setIsTyping(true);\n      startTyping();\n    }\n\n    // Clear existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set timeout to stop typing\n    typingTimeoutRef.current = setTimeout(() => {\n      if (isTyping && stopTyping) {\n        setIsTyping(false);\n        stopTyping();\n      }\n    }, 1000);\n  };\n\n  // Stop typing when component unmounts or room changes\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      if (isTyping && stopTyping) {\n        stopTyping();\n      }\n    };\n  }, [selectedRoomId, isTyping, stopTyping]);\n\n  const getMessageStatus = (message) => {\n    if (message.sender === 'me') {\n      if (message.status === 'sending') {\n        return <Clock className=\"w-3 h-3 text-gray-400\" />;\n      } else if (message.status === 'sent') {\n        return <Check className=\"w-3 h-3 text-gray-400\" />;\n      } else if (message.status === 'delivered') {\n        return <CheckCheck className=\"w-3 h-3 text-gray-400\" />;\n      } else if (message.status === 'read') {\n        return <CheckCheck className=\"w-3 h-3 text-blue-500\" />;\n      }\n      return <CheckCheck className=\"w-3 h-3 text-gray-400\" />;\n    }\n    return null;\n  };\n\n  const getRoomDisplayName = () => {\n    const roomNames = {\n      'general': 'General Chat',\n      'tech-talk': 'Tech Talk',\n      'random': 'Random'\n    };\n    return roomNames[selectedRoomId] || selectedRoomId;\n  };\n\n  const getRoomAvatar = () => {\n    const roomAvatars = {\n      'general': '',\n      'tech-talk': '',\n      'random': ''\n    };\n    return roomAvatars[selectedRoomId] || '';\n  };\n\n  const getEncryptionStatusText = (message) => {\n    if (!message.isEncrypted) {\n      return 'Not encrypted';\n    }\n    \n    if (message.encryptionError) {\n      if (message.decryptionErrorType === 'signature_failed') {\n        return 'Encrypted (signature verification failed)';\n      } else if (message.decryptionErrorType === 'decrypt_failed') {\n        return 'Encrypted (decryption failed)';\n      } else {\n        return 'Encrypted (error)';\n      }\n    }\n    \n    if (message.signatureValid) {\n      return 'Encrypted and verified';\n    } else {\n      return 'Encrypted (signature not verified)';\n    }\n  };\n\n  if (!selectedRoomId) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center gradient-neutral\">\n        <div className=\"text-center\">\n          <div className=\"w-32 h-32 gradient-primary rounded-3xl flex items-center justify-center mx-auto mb-6 shadow-strong\">\n            <MessageCircle className=\"w-16 h-16 text-white\" />\n          </div>\n          <h3 className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-4\">\n            Welcome to Chat\n          </h3>\n          <p className=\"text-lg text-gray-600\">\n            Select a conversation to start messaging\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col bg-white\">\n      {/* Chat Header */}\n      <div className=\"flex items-center justify-between p-6 border-b border-gray-100 glass-morphism shadow-soft\">\n        <div className=\"flex items-center space-x-3\">\n          {isMobile && (\n            <button\n              onClick={onBackToList}\n              className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-full transition-colors\"\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n            </button>\n          )}\n          \n          <div className=\"w-12 h-12 gradient-primary rounded-xl flex items-center justify-center text-xl shadow-soft\">\n            {getRoomAvatar()}\n          </div>\n          \n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent truncate\">\n              {getRoomDisplayName()}\n            </h2>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              {isConnected ? (\n                <>\n                  <Wifi className=\"w-3 h-3 text-green-500\" />\n                  <span className=\"text-green-600\">Connected</span>\n                  {currentRoom && (\n                    <span>• Room: {currentRoom}</span>\n                  )}\n                </>\n              ) : (\n                <>\n                  <WifiOff className=\"w-3 h-3 text-red-500\" />\n                  <span className=\"text-red-600\">\n                    {connectionError || 'Disconnected'}\n                  </span>\n                  <button\n                    onClick={retryConnection}\n                    className=\"text-blue-600 hover:text-blue-800 underline\"\n                  >\n                    Retry\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button className=\"p-3 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-green-400 hover:to-blue-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium hover:scale-105\">\n            <Phone className=\"w-5 h-5\" />\n          </button>\n          <button className=\"p-3 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-purple-400 hover:to-pink-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium hover:scale-105\">\n            <Video className=\"w-5 h-5\" />\n          </button>\n          <button className=\"p-3 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-gray-400 hover:to-gray-600 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium hover:scale-105\">\n            <MoreVertical className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Connection Status Banner */}\n      {!isConnected && (\n        <div className=\"gradient-warning border-b border-orange-200 px-6 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <AlertCircle className=\"w-5 h-5 text-white\" />\n              <span className=\"text-sm font-medium text-white\">\n                {connectionError || 'Disconnected from chat'}\n                {pendingMessagesCount > 0 && (\n                  <span className=\"ml-2\">\n                    ({pendingMessagesCount} message{pendingMessagesCount > 1 ? 's' : ''} queued)\n                  </span>\n                )}\n              </span>\n            </div>\n            <button\n              onClick={retryConnection}\n              className=\"text-sm text-white hover:text-gray-100 underline font-medium transition-colors duration-200\"\n            >\n              Retry Connection\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Error Banner */}\n      {lastError && (\n        <div className=\"gradient-error border-b border-red-200 px-6 py-3\">\n          <div className=\"flex items-center space-x-3\">\n            <AlertCircle className=\"w-5 h-5 text-white\" />\n            <span className=\"text-sm font-medium text-white\">\n              {lastError.message}\n              {lastError.type === 'send_message' && lastError.details?.queued && (\n                <span className=\"ml-2\">(Message queued for retry)</span>\n              )}\n            </span>\n          </div>\n        </div>\n      )}\n\n      {/* Encryption Error Banners */}\n      {encryptionErrors.map(error => (\n        <EncryptionErrorBanner\n          key={error.id}\n          error={error}\n          onRetry={canRetry(error.id) ? () => handleEncryptionRetry(error.id) : null}\n          onDismiss={() => removeEncryptionError(error.id)}\n          className=\"border-b\"\n        />\n      ))}\n\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-6 space-y-4 gradient-neutral\">\n        {messages.length === 0 ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 gradient-primary rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-strong\">\n                {getRoomAvatar()}\n              </div>\n              <h3 className=\"text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-3\">\n                {getRoomDisplayName()}\n              </h3>\n              {isConnected ? (\n                <p className=\"text-gray-600 text-lg\">\n                  No messages yet. Start the conversation!\n                </p>\n              ) : (\n                <p className=\"text-gray-600 text-lg\">\n                  Connecting to chat...\n                </p>\n              )}\n            </div>\n          </div>\n        ) : (\n          messages.map((message, index) => {\n            const isOwn = message.sender === 'me';\n            const showSender = !isOwn && (index === 0 || messages[index - 1].sender !== message.sender);\n            \n            return (\n              <div\n                key={message.id}\n                className={clsx(\n                  \"flex\",\n                  isOwn ? \"justify-end\" : \"justify-start\"\n                )}\n              >\n                <div className={clsx(\n                  \"max-w-xs lg:max-w-md px-5 py-3 rounded-2xl shadow-medium transition-all duration-300 hover:shadow-strong\",\n                  isOwn \n                    ? \"gradient-primary text-white\" \n                    : \"glass-morphism text-gray-900\"\n                )}>\n                  {showSender && (\n                    <div className=\"text-xs font-medium mb-1 text-gray-600\">\n                      {message.senderName || 'Unknown User'}\n                    </div>\n                  )}\n                  \n                  <div className=\"break-words\">\n                    {message.text}\n                  </div>\n                  \n                  {/* Encryption error message display */}\n                  {message.encryptionError && (\n                    <div className={clsx(\n                      \"text-xs mt-1 px-2 py-1 rounded\",\n                      message.decryptionErrorType === 'signature_failed'\n                        ? isOwn \n                          ? \"bg-yellow-100 text-yellow-800 border border-yellow-200\" \n                          : \"bg-yellow-50 text-yellow-700 border border-yellow-200\"\n                        : isOwn \n                          ? \"bg-red-100 text-red-800 border border-red-200\" \n                          : \"bg-red-50 text-red-700 border border-red-200\"\n                    )}>\n                      <div className=\"flex items-center space-x-1\">\n                        {message.decryptionErrorType === 'signature_failed' ? (\n                          <AlertTriangle className=\"w-3 h-3 text-yellow-600\" />\n                        ) : (\n                          <AlertTriangle className=\"w-3 h-3 text-red-600\" />\n                        )}\n                        <span>{message.encryptionError}</span>\n                      </div>\n                      \n                      {/* Additional context for different error types */}\n                      {message.decryptionErrorType === 'signature_failed' && (\n                        <div className=\"mt-1 text-xs opacity-75\">\n                          The message was decrypted but the sender&apos;s identity could not be verified.\n                        </div>\n                      )}\n                      \n                      {message.decryptionErrorType === 'decrypt_failed' && (\n                        <div className=\"mt-1 text-xs opacity-75\">\n                          This message may be corrupted or sent with incompatible encryption.\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  <div className={clsx(\n                    \"flex items-center justify-between mt-1 text-xs\",\n                    isOwn ? \"text-blue-100\" : \"text-gray-500\"\n                  )}>\n                    <div className=\"flex items-center space-x-1\">\n                      {/* Encryption status text */}\n                      <span className={clsx(\n                        \"text-xs opacity-75\",\n                        message.encryptionError && message.decryptionErrorType === 'signature_failed' \n                          ? isOwn ? \"text-yellow-200\" : \"text-yellow-600\"\n                          : message.encryptionError \n                            ? isOwn ? \"text-red-200\" : \"text-red-500\"\n                            : message.isEncrypted \n                              ? isOwn ? \"text-green-200\" : \"text-green-600\"\n                              : isOwn ? \"text-gray-300\" : \"text-gray-400\"\n                      )}>\n                        {getEncryptionStatusText(message)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      <span>{message.timestamp}</span>\n                      {getMessageStatus(message)}\n                      \n                      {/* Encryption status indicators */}\n                      {message.isEncrypted && !message.encryptionError && message.signatureValid && (\n                        <div className=\"flex items-center space-x-1\">\n                          <Lock className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-green-200\" : \"text-green-600\"\n                          )} title=\"End-to-end encrypted and signature verified\" />\n                          <div className={clsx(\n                            \"w-1 h-1 rounded-full\",\n                            isOwn ? \"bg-green-200\" : \"bg-green-600\"\n                          )} title=\"Verified sender\" />\n                        </div>\n                      )}\n                      \n                      {message.isEncrypted && !message.encryptionError && !message.signatureValid && (\n                        <div className=\"flex items-center space-x-1\">\n                          <Lock className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-blue-200\" : \"text-green-600\"\n                          )} title=\"End-to-end encrypted\" />\n                          <AlertTriangle className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-yellow-200\" : \"text-yellow-500\"\n                          )} title=\"Message signature could not be verified - sender authenticity unknown\" />\n                        </div>\n                      )}\n                      \n                      {message.encryptionError && message.decryptionErrorType === 'decrypt_failed' && (\n                        <div className=\"flex items-center space-x-1\">\n                          <LockOpen className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-red-200\" : \"text-red-500\"\n                          )} title=\"Failed to decrypt message\" />\n                          <AlertTriangle className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-red-200\" : \"text-red-500\"\n                          )} title=\"Decryption error\" />\n                        </div>\n                      )}\n                      \n                      {message.encryptionError && message.decryptionErrorType === 'signature_failed' && (\n                        <div className=\"flex items-center space-x-1\">\n                          <Lock className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-blue-200\" : \"text-green-600\"\n                          )} title=\"Message decrypted successfully\" />\n                          <AlertTriangle className={clsx(\n                            \"w-3 h-3\",\n                            isOwn ? \"text-yellow-200\" : \"text-yellow-500\"\n                          )} title=\"Signature verification failed - sender authenticity could not be verified\" />\n                        </div>\n                      )}\n                      \n                      {!message.isEncrypted && (\n                        <LockOpen className={clsx(\n                          \"w-3 h-3\",\n                          isOwn ? \"text-gray-300\" : \"text-gray-400\"\n                        )} title=\"Message not encrypted\" />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n\n        {/* Typing Indicators */}\n        {typingUsers.length > 0 && (\n          <div className=\"flex justify-start mb-4\">\n            <div className=\"max-w-xs lg:max-w-md px-5 py-3 rounded-2xl glass-morphism text-gray-600 shadow-soft\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"flex space-x-1\">\n                  <div className=\"w-2 h-2 gradient-accent rounded-full animate-bounce\"></div>\n                  <div className=\"w-2 h-2 gradient-accent rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                  <div className=\"w-2 h-2 gradient-accent rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                </div>\n                <span className=\"text-sm font-medium\">\n                  {typingUsers.length === 1 \n                    ? `${typingUsers[0].user_name} is typing...`\n                    : `${typingUsers.length} people are typing...`\n                  }\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messageEndRef} />\n      </div>\n\n      {/* Message Input */}\n      <div className=\"border-t border-gray-100 glass-morphism p-6 shadow-strong\">\n        {/* Enhanced Encryption Status Panel */}\n        <div className=\"mb-3\">\n          <EncryptionStatusPanel\n            selectedUser={selectedUser}\n            onSettingsClick={() => {\n              // This could trigger a settings modal or callback to parent\n              console.log('Encryption settings clicked');\n            }}\n          />\n        </div>\n        \n        {/* Encryption Error Display */}\n        {encryptionError && (\n          <div className=\"mb-3\">\n            <EncryptionErrorDisplay\n              error={encryptionError}\n              onRetry={encryptionError.type !== 'signature_verification_failed' ? () => {\n                setEncryptionError(null);\n                handleSendMessage();\n              } : null}\n              onDismiss={() => setEncryptionError(null)}\n              compact={true}\n            />\n          </div>\n        )}\n        \n        <div className=\"flex items-end space-x-4\">\n          <button className=\"p-3 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-purple-400 hover:to-pink-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium hover:scale-105\">\n            <Paperclip className=\"w-5 h-5\" />\n          </button>\n          \n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={inputRef}\n              value={messageInput}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n              placeholder={isConnected ? \"Type a message...\" : \"Connecting...\"}\n              disabled={!isConnected || isEncrypting}\n              className={clsx(\n                \"w-full px-5 py-3 border-2 border-transparent rounded-2xl resize-none focus:outline-none focus:ring-4 focus:ring-purple-200 focus:border-purple-300 transition-all duration-300 shadow-soft\",\n                {\n                  \"bg-gray-100 opacity-70\": !isConnected || isEncrypting,\n                  \"glass-morphism\": isConnected && !isEncrypting\n                }\n              )}\n              rows={1}\n              style={{ minHeight: '48px', maxHeight: '120px' }}\n            />\n            \n            {/* Encryption indicator in input */}\n            {isEncrypting && (\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                <div className=\"flex items-center space-x-1 text-xs text-blue-600\">\n                  <div className=\"animate-spin rounded-full h-3 w-3 border-b border-blue-600\"></div>\n                  <span>Encrypting...</span>\n                </div>\n              </div>\n            )}\n          </div>\n          \n          <button className=\"p-3 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-yellow-400 hover:to-orange-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium hover:scale-105\">\n            <Smile className=\"w-5 h-5\" />\n          </button>\n          \n          <button\n            onClick={handleSendMessage}\n            disabled={!messageInput.trim() || isSending || isEncrypting}\n            className={clsx(\n              \"p-3 rounded-xl transition-all duration-300 relative shadow-soft hover:shadow-medium\",\n              messageInput.trim() && isConnected && !isSending && !isEncrypting\n                ? \"gradient-accent text-white hover:scale-105\"\n                : \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n            )}\n            title={\n              isEncrypting ? 'Encrypting message...' :\n              !isConnected ? 'Message will be queued and sent when reconnected' : \n              'Send message'\n            }\n          >\n            {isEncrypting ? (\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n            ) : (\n              <Send className=\"w-5 h-5\" />\n            )}\n          </button>\n        </div>\n        \n        {pendingMessagesCount > 0 && (\n          <div className=\"mt-2 text-xs text-yellow-600\">\n            {pendingMessagesCount} message{pendingMessagesCount > 1 ? 's' : ''} queued for sending\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5789, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/UserList.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useEffect } from 'react';\nimport websocketService from '../services/websocket';\n\nconst UserList = ({ currentUser, onStartChat }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Removed excessive logging to prevent console spam\n\n  const loadUsers = () => {\n    console.log('UserList: loadUsers called');\n    console.log('UserList: WebSocket connected:', websocketService.getConnectionStatus());\n    console.log('UserList: Connection info:', websocketService.getConnectionInfo());\n    setLoading(true);\n\n    if (websocketService.getConnectionStatus()) {\n      console.log('UserList: Requesting users from backend...');\n      websocketService.requestAllUsers();\n      \n      // Set a timeout to stop loading if no response\n      setTimeout(() => {\n        console.log('UserList: Timeout waiting for users response');\n        setLoading(false);\n      }, 5000);\n    } else {\n      console.log('UserList: WebSocket not connected');\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('UserList: useEffect triggered, currentUser:', currentUser?.uid);\n\n    if (!currentUser?.uid) {\n      console.log('UserList: No current user, skipping...');\n      return;\n    }\n\n    // Define event handler\n    const handleAllUsersList = (data) => {\n      console.log('UserList: Event handler - Received all users response:', data);\n\n      if (data.status === 'success' && data.users && Array.isArray(data.users)) {\n        // Filter out current user\n        console.log('UserList: Raw users from backend:', data.users);\n        console.log('UserList: Current user for filtering:', currentUser.uid, typeof currentUser.uid);\n\n        const filteredUsers = data.users.filter(user => {\n          const userId = user.id.toString();\n          const currentUserId = currentUser.uid.toString();\n          const shouldInclude = userId !== currentUserId;\n          console.log(`UserList: User ${user.id} (${user.username || user.display_name}) - userId: \"${userId}\", currentUserId: \"${currentUserId}\", include: ${shouldInclude}`);\n          return shouldInclude;\n        });\n\n        console.log('UserList: Final filtered users:', filteredUsers);\n        setUsers(filteredUsers);\n      } else {\n        console.log('UserList: No users in response or error');\n        setUsers([]);\n      }\n      setLoading(false);\n    };\n\n    // Add event listener and load users\n    const setupAndLoad = () => {\n      if (websocketService.socket && websocketService.getConnectionStatus()) {\n        console.log('UserList: Socket ready, adding event listener');\n        websocketService.socket.on('all_users_list', handleAllUsersList);\n\n        // Load users after listener is set\n        setTimeout(() => {\n          console.log('UserList: Auto-loading users on mount');\n          loadUsers();\n        }, 200);\n      } else {\n        console.log('UserList: Socket not ready, retrying in 500ms...');\n        setTimeout(setupAndLoad, 500);\n      }\n    };\n\n    setupAndLoad();\n\n    // Cleanup\n    return () => {\n      if (websocketService.socket) {\n        console.log('UserList: Removing event listener');\n        websocketService.socket.off('all_users_list', handleAllUsersList);\n      }\n    };\n  }, [currentUser?.uid]);\n\n  const handleRefresh = () => {\n    console.log('UserList: Manual refresh requested');\n    loadUsers();\n  };\n\n  const handleUserClick = (user) => {\n    console.log('UserList: User clicked:', user);\n    onStartChat(user);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent\">Users</h3>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={handleRefresh}\n              className=\"p-2 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-purple-500 hover:to-blue-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium\"\n              title=\"Refresh user list\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n              </svg>\n            </button>\n            <button\n              onClick={() => {\n                console.log('Manual test - WebSocket status:', websocketService.getConnectionStatus());\n                console.log('Manual test - Socket object:', websocketService.socket);\n                if (websocketService.socket) {\n                  console.log('Manual test - Emitting get_all_users');\n                  websocketService.socket.emit('get_all_users');\n\n                  // Test if we can receive a direct event\n                  console.log('Manual test - Adding temporary listener');\n                  const tempHandler = (data) => {\n                    console.log('TEMP HANDLER - Received all_users_list:', data);\n                    if (data.status === 'success' && data.users) {\n                      console.log('TEMP HANDLER - Setting users directly:', data.users);\n                      setUsers(data.users.filter(u => u.id.toString() !== currentUser.uid.toString()));\n                      setLoading(false);\n                    }\n                  };\n                  websocketService.socket.once('all_users_list', tempHandler);\n                }\n              }}\n              className=\"px-3 py-1 text-xs text-white gradient-accent rounded-lg hover:scale-105 transition-all duration-300 shadow-soft\"\n              title=\"Test backend connection\"\n            >\n              Test\n            </button>\n          </div>\n        </div>\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 gradient-neutral rounded-lg w-3/4 mb-4\"></div>\n          <div className=\"space-y-3\">\n            {[1, 2, 3].map(i => (\n              <div key={i} className=\"flex items-center space-x-3 p-3 glass-morphism rounded-xl\">\n                <div className=\"w-10 h-10 gradient-neutral rounded-full\"></div>\n                <div className=\"h-4 gradient-neutral rounded-lg w-1/2\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"mt-4 text-sm text-gray-500 text-center\">\n          Loading users...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"text-xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent\">\n          Users ({users.length})\n        </h3>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={handleRefresh}\n            className=\"p-2 text-gray-500 hover:text-white hover:bg-gradient-to-r hover:from-purple-500 hover:to-blue-500 rounded-xl transition-all duration-300 shadow-soft hover:shadow-medium\"\n            title=\"Refresh user list\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n          </button>\n          <button\n            onClick={() => {\n              console.log('Debug - Current users state:', users);\n              console.log('Debug - Current user:', currentUser);\n              console.log('Debug - Loading state:', loading);\n              // Also request fresh data\n              if (websocketService.socket) {\n                websocketService.socket.emit('get_all_users');\n              }\n            }}\n            className=\"px-3 py-1 text-xs text-white gradient-success rounded-lg hover:scale-105 transition-all duration-300 shadow-soft\"\n            title=\"Debug state\"\n          >\n            Debug\n          </button>\n        </div>\n      </div>\n\n      {users.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"w-16 h-16 gradient-neutral rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-soft\">\n            <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n            </svg>\n          </div>\n          <p className=\"text-base font-semibold text-gray-700 mb-2\">No other users found</p>\n          <p className=\"text-sm text-gray-500\">Click refresh to load users or create more accounts</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {users.map(user => (\n            <div\n              key={user.id}\n              onClick={() => handleUserClick(user)}\n              className=\"flex items-center space-x-4 p-4 glass-morphism rounded-xl cursor-pointer transition-all duration-300 hover:scale-[1.02] hover:shadow-medium\"\n            >\n              <div className=\"relative\">\n                <div className=\"w-12 h-12 gradient-primary rounded-xl flex items-center justify-center text-white text-base font-semibold shadow-soft\">\n                  {(user.display_name || user.name || user.username || user.email || 'U').charAt(0).toUpperCase()}\n                </div>\n                {user.is_online && (\n                  <div className=\"absolute -bottom-1 -right-1 w-4 h-4 gradient-success rounded-full border-2 border-white shadow-soft\"></div>\n                )}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-base font-semibold text-gray-900 truncate\">\n                  {user.display_name || user.name || user.username || user.email}\n                </p>\n                <p className=\"text-sm text-gray-500 flex items-center space-x-1\">\n                  <span className={`w-2 h-2 rounded-full ${user.is_online ? 'bg-green-400' : 'bg-gray-400'}`}></span>\n                  <span>{user.is_online ? 'Online' : 'Offline'}</span>\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6261, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/EncryptionErrorBoundary.js"],"sourcesContent":["\"use client\"\nimport React from 'react';\nimport { Shield, AlertTriangle, RefreshCw, Settings } from 'lucide-react';\nimport { EncryptionErrorTypes } from '../services/encryptionService';\nimport EncryptionErrorDisplay from './EncryptionErrorDisplay';\n\n/**\n * EncryptionErrorBoundary - Specialized error boundary for encryption-related errors\n * Provides graceful degradation and recovery options for encryption failures\n */\nclass EncryptionErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      isRecovering: false,\n      showFallbackMode: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Check if this is an encryption-related error\n    const isEncryptionError = error.type && Object.values(EncryptionErrorTypes).includes(error.type);\n    \n    return {\n      hasError: true,\n      isEncryptionError\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n\n    // Log encryption errors with additional context\n    console.error('Encryption Error Boundary caught error:', {\n      error,\n      errorInfo,\n      isEncryptionError: this.state.isEncryptionError,\n      timestamp: new Date().toISOString()\n    });\n\n    // In production, report encryption errors to monitoring service\n    if (process.env.NODE_ENV === 'production' && this.state.isEncryptionError) {\n      // reportEncryptionError(error, errorInfo);\n    }\n  }\n\n  handleRetry = async () => {\n    this.setState({ isRecovering: true });\n    \n    try {\n      // Clear the error state and attempt recovery\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Brief delay\n      \n      this.setState({\n        hasError: false,\n        error: null,\n        errorInfo: null,\n        isRecovering: false\n      });\n    } catch (recoveryError) {\n      console.error('Recovery failed:', recoveryError);\n      this.setState({ isRecovering: false });\n    }\n  };\n\n  handleFallbackMode = () => {\n    this.setState({ showFallbackMode: true });\n    \n    // Notify parent component about fallback mode if callback provided\n    if (this.props.onFallbackMode) {\n      this.props.onFallbackMode();\n    }\n  };\n\n  handleClearEncryption = async () => {\n    try {\n      // Clear encryption state and continue without encryption\n      if (this.props.onClearEncryption) {\n        await this.props.onClearEncryption();\n      }\n      \n      this.setState({\n        hasError: false,\n        error: null,\n        errorInfo: null,\n        showFallbackMode: true\n      });\n    } catch (error) {\n      console.error('Failed to clear encryption:', error);\n    }\n  };\n\n  getErrorSeverity = (error) => {\n    if (!error || !error.type) return 'error';\n    \n    const criticalErrors = [\n      EncryptionErrorTypes.INITIALIZATION_FAILED,\n      EncryptionErrorTypes.KEY_GENERATION_FAILED\n    ];\n    \n    return criticalErrors.includes(error.type) ? 'critical' : 'error';\n  };\n\n  renderEncryptionError = () => {\n    const { error } = this.state;\n    const severity = this.getErrorSeverity(error);\n    const isCritical = severity === 'critical';\n\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\n        <div className=\"max-w-lg w-full\">\n          <div className=\"bg-white rounded-lg shadow-lg p-8\">\n            <div className=\"text-center mb-6\">\n              <div className={`w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4 ${\n                isCritical ? 'bg-red-100' : 'bg-yellow-100'\n              }`}>\n                <Shield className={`w-8 h-8 ${\n                  isCritical ? 'text-red-600' : 'text-yellow-600'\n                }`} />\n              </div>\n              \n              <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                {isCritical ? 'Encryption Setup Failed' : 'Encryption Error'}\n              </h1>\n              \n              <p className=\"text-gray-600 mb-6\">\n                {isCritical \n                  ? 'We couldn\\'t set up encryption for your messages. You can continue without encryption or try again.'\n                  : 'An encryption error occurred, but you can continue chatting.'\n                }\n              </p>\n            </div>\n\n            {/* Error Details */}\n            <div className=\"mb-6\">\n              <EncryptionErrorDisplay\n                error={error}\n                onRetry={this.handleRetry}\n                showRetry={!this.state.isRecovering}\n                className=\"mb-4\"\n              />\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"space-y-3\">\n              {!this.state.showFallbackMode && (\n                <button\n                  onClick={this.handleRetry}\n                  disabled={this.state.isRecovering}\n                  className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  {this.state.isRecovering ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Retrying...\n                    </>\n                  ) : (\n                    <>\n                      <RefreshCw className=\"w-4 h-4 mr-2\" />\n                      Try Again\n                    </>\n                  )}\n                </button>\n              )}\n              \n              <button\n                onClick={this.handleFallbackMode}\n                className=\"w-full flex items-center justify-center px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\"\n              >\n                <AlertTriangle className=\"w-4 h-4 mr-2\" />\n                Continue Without Encryption\n              </button>\n              \n              {isCritical && (\n                <button\n                  onClick={this.handleClearEncryption}\n                  className=\"w-full flex items-center justify-center px-4 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 transition-colors\"\n                >\n                  <Settings className=\"w-4 h-4 mr-2\" />\n                  Reset Encryption Settings\n                </button>\n              )}\n            </div>\n\n            {/* Development Error Details */}\n            {process.env.NODE_ENV === 'development' && error && (\n              <details className=\"mt-6 bg-gray-50 border border-gray-200 rounded-md p-4\">\n                <summary className=\"cursor-pointer text-sm font-medium text-gray-700 mb-2\">\n                  Development Error Details\n                </summary>\n                <pre className=\"text-xs text-gray-600 overflow-auto max-h-32 whitespace-pre-wrap\">\n                  {error.toString()}\n                  {this.state.errorInfo?.componentStack}\n                </pre>\n              </details>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  renderGenericError = () => {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\n        <div className=\"max-w-md w-full text-center\">\n          <div className=\"bg-white rounded-lg shadow-lg p-8\">\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\n            </div>\n            \n            <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Something went wrong\n            </h1>\n            \n            <p className=\"text-gray-600 mb-6\">\n              An unexpected error occurred. Please try refreshing the page.\n            </p>\n\n            <div className=\"flex flex-col gap-3\">\n              <button\n                onClick={this.handleRetry}\n                disabled={this.state.isRecovering}\n                className=\"flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n              >\n                {this.state.isRecovering ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Retrying...\n                  </>\n                ) : (\n                  <>\n                    <RefreshCw className=\"w-4 h-4 mr-2\" />\n                    Try Again\n                  </>\n                )}\n              </button>\n              \n              <button\n                onClick={() => window.location.reload()}\n                className=\"flex items-center justify-center px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\"\n              >\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                Refresh Page\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Show fallback mode if requested\n      if (this.state.showFallbackMode) {\n        return (\n          <div className=\"bg-yellow-50 border-b border-yellow-200 p-3\">\n            <div className=\"flex items-center justify-center space-x-2 text-yellow-800\">\n              <AlertTriangle className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">\n                Running in fallback mode - encryption disabled\n              </span>\n            </div>\n            {this.props.children}\n          </div>\n        );\n      }\n\n      // Render appropriate error UI based on error type\n      return this.state.isEncryptionError \n        ? this.renderEncryptionError()\n        : this.renderGenericError();\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EncryptionErrorBoundary;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6725, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/components/ChatInterface.js"],"sourcesContent":["\"use client\"\nimport React, { useState, useEffect, memo } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '../context/AuthContext';\nimport { useChat } from '../hooks/useChat';\nimport { usePerformance, useConnectionMonitor } from '../hooks/usePerformance';\nimport ChatSidebar from './ChatSidebar';\nimport ChatMain from './ChatMain';\nimport UserList from './UserList';\nimport EncryptionErrorBoundary from './EncryptionErrorBoundary';\nimport EncryptionSettings from './EncryptionSettings';\nimport { EncryptionStatusBadge } from './EncryptionStatusIndicator';\nimport encryptionService from '../services/encryptionService';\nimport { clsx } from 'clsx';\n\nfunction ChatInterface({ roomId }) {\n  const { currentUser } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const { measureAsync } = usePerformance('ChatInterface');\n  const { isOnline } = useConnectionMonitor();\n  \n  // Removed excessive logging to prevent infinite loops\n\n  const [selectedRoomId, setSelectedRoomId] = useState(roomId || null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [activeChats, setActiveChats] = useState([]);\n  const [showEncryptionSettings, setShowEncryptionSettings] = useState(false);\n  const [encryptionFallbackMode, setEncryptionFallbackMode] = useState(false);\n\n  // Update selectedRoomId when roomId prop changes\n  useEffect(() => {\n    if (roomId && roomId !== selectedRoomId) {\n      console.log('ChatInterface: Setting room from URL:', roomId);\n      setSelectedRoomId(roomId);\n      \n      // Try to determine the user from the room ID (format: user1_user2)\n      if (roomId.includes('_')) {\n        const userIds = roomId.split('_');\n        const otherUserId = userIds.find(id => id !== currentUser?.uid);\n        if (otherUserId) {\n          // Fetch real user data instead of creating mock user\n          const fetchUserData = async () => {\n            try {\n              const response = await fetch(`http://localhost:5000/api/users/${otherUserId}`, {\n                credentials: 'include'\n              });\n              \n              if (response.ok) {\n                const userData = await response.json();\n                const realUser = userData.data;\n                setSelectedUser(realUser);\n                \n                // Add to active chats\n                setActiveChats(prev => {\n                  const exists = prev.find(chat => chat.roomId === roomId);\n                  if (!exists) {\n                    return [...prev, { roomId, user: realUser, lastActivity: new Date() }];\n                  }\n                  return prev;\n                });\n              } else {\n                console.error('Failed to fetch user data for', otherUserId);\n              }\n            } catch (error) {\n              console.error('Error fetching user data:', error);\n            }\n          };\n          \n          fetchUserData();\n          return; // Skip the mock user creation below\n          // This code is now handled above with real user fetch\n        }\n      }\n    }\n  }, [roomId, selectedRoomId, currentUser?.uid]);\n\n  // Use WebSocket chat hook only when we have authentication data\n  const {\n    messages,\n    isConnected,\n    currentRoom,\n    sendMessage: sendWebSocketMessage,\n    startChatWithUser,\n    connectionError,\n    lastError,\n    pendingMessagesCount,\n    retryConnection,\n    encryptionStatus,\n    typingUsers,\n    onlineUsers,\n    startTyping,\n    stopTyping,\n    getDebugInfo\n  } = useChat(\n    currentUser?.uid,\n    currentUser?.accessToken\n  );\n\n  // Handle responsive design\n  useEffect(() => {\n    const checkMobile = () => {\n      const mobile = window.innerWidth < 768;\n      setIsMobile(mobile);\n      if (mobile && roomId) {\n        setShowSidebar(false);\n      } else if (!mobile) {\n        setShowSidebar(true);\n      }\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, [roomId]);\n\n  // Handle starting a chat with a user\n  const handleStartChat = async (user) => {\n    console.log('ChatInterface: Starting chat with user:', user);\n    const roomId = await startChatWithUser(user.id);\n    if (roomId) {\n      setSelectedRoomId(roomId);\n      setSelectedUser(user);\n\n      // Add to active chats if not already there\n      setActiveChats(prev => {\n        const exists = prev.find(chat => chat.roomId === roomId);\n        if (!exists) {\n          return [...prev, { roomId, user, lastActivity: new Date() }];\n        }\n        return prev;\n      });\n\n      // Update URL\n      router.push(`/chat/${roomId}`, undefined, { shallow: true });\n\n      // On mobile, hide sidebar when chat is selected\n      if (isMobile) {\n        setShowSidebar(false);\n      }\n    }\n  };\n\n  // Handle selecting an existing chat\n  const handleChatSelect = (chat) => {\n    setSelectedRoomId(chat.roomId);\n    setSelectedUser(chat.user);\n\n    // Update URL\n    router.push(`/chat/${chat.roomId}`, undefined, { shallow: true });\n\n    // On mobile, hide sidebar when chat is selected\n    if (isMobile) {\n      setShowSidebar(false);\n    }\n  };\n\n  // Handle back to chat list on mobile\n  const handleBackToList = () => {\n    if (isMobile) {\n      setShowSidebar(true);\n      router.push('/chat', undefined, { shallow: true });\n    }\n  };\n\n  // Handle browser back/forward navigation\n  useEffect(() => {\n    const handleRouteChange = () => {\n      if (pathname === '/chat') {\n        setSelectedRoomId(null);\n        setSelectedUser(null);\n        if (isMobile) {\n          setShowSidebar(true);\n        }\n      } else if (pathname.startsWith('/chat/')) {\n        const roomFromUrl = pathname.split('/chat/')[1];\n        if (roomFromUrl && roomFromUrl !== selectedRoomId) {\n          setSelectedRoomId(roomFromUrl);\n          // Try to find the user from active chats\n          const chat = activeChats.find(c => c.roomId === roomFromUrl);\n          if (chat) {\n            setSelectedUser(chat.user);\n          }\n          if (isMobile) {\n            setShowSidebar(false);\n          }\n        }\n      }\n    };\n\n    handleRouteChange();\n  }, [pathname, isMobile, selectedRoomId, activeChats]);\n\n  // Auto-debug logging for development (only when significant changes occur)\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('=== ChatInterface Debug Info ===');\n      console.log('Current User:', currentUser?.uid);\n      console.log('Is Connected:', isConnected);\n      console.log('Selected Room ID:', selectedRoomId);\n      console.log('Active Chats Count:', activeChats.length);\n      console.log('================================');\n    }\n  }, [currentUser?.uid, isConnected, selectedRoomId]);\n\n  // Handle encryption fallback mode\n  const handleEncryptionFallback = () => {\n    setEncryptionFallbackMode(true);\n  };\n\n  // Handle clearing encryption (for error recovery)\n  const handleClearEncryption = async () => {\n    try {\n      await encryptionService.clearEncryption();\n      setEncryptionFallbackMode(true);\n    } catch (error) {\n      console.error('Failed to clear encryption:', error);\n    }\n  };\n\n  // Debug function for development\n  const handleDebug = () => {\n    console.log('Debug Info:', getDebugInfo());\n    console.log('Current User:', currentUser);\n    console.log('Is Connected:', isConnected);\n    console.log('Connection Error:', connectionError);\n    console.log('Online Users:', onlineUsers);\n    console.log('Encryption Status:', encryptionService.getEncryptionStatus());\n  };\n\n  // Show loading state if user data is not available\n  if (!currentUser?.uid || !currentUser?.accessToken) {\n    return (\n      <div className=\"flex h-screen items-center justify-center bg-white\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading chat...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <EncryptionErrorBoundary \n      onFallbackMode={handleEncryptionFallback}\n      onClearEncryption={handleClearEncryption}\n    >\n      {/* Encryption Fallback Mode Banner */}\n      {encryptionFallbackMode && (\n        <div className=\"bg-yellow-50 border-b border-yellow-200 px-4 py-2\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2 text-yellow-800\">\n              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"text-sm font-medium\">\n                Encryption disabled - messages are not encrypted\n              </span>\n            </div>\n            <button\n              onClick={() => setShowEncryptionSettings(true)}\n              className=\"text-sm text-yellow-700 hover:text-yellow-900 underline\"\n            >\n              Settings\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex h-screen bg-white\">\n      {/* Sidebar */}\n      <div className={clsx(\n        \"transition-all duration-300 ease-in-out bg-white border-r border-gray-200\",\n        {\n          \"w-80\": !isMobile && showSidebar,\n          \"w-full\": isMobile && showSidebar,\n          \"w-0 overflow-hidden\": !showSidebar,\n        }\n      )}>\n        <div className=\"h-full flex flex-col\">\n          {/* Header with user info and logout */}\n          <div className=\"border-b border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium\">\n                  {(currentUser?.displayName || currentUser?.username || 'U').charAt(0).toUpperCase()}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {currentUser?.displayName || currentUser?.username}\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <p className=\"text-xs text-gray-500\">Online</p>\n                    <EncryptionStatusBadge \n                      selectedUser={selectedUser}\n                      className=\"text-xs\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setShowEncryptionSettings(true)}\n                  className=\"text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-100\"\n                  title=\"Encryption Settings\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={async () => {\n                    try {\n                      // Clear encryption before logout if enabled in preferences\n                      await encryptionService.clearEncryption();\n                      \n                      // Call logout API\n                      await fetch('http://localhost:5000/api/auth/logout', {\n                        method: 'POST',\n                        credentials: 'include'\n                      });\n                      // Redirect to login\n                      window.location.href = '/login';\n                    } catch (error) {\n                      console.error('Logout error:', error);\n                      // Force redirect anyway\n                      window.location.href = '/login';\n                    }\n                  }}\n                  className=\"text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-100\"\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Active Chats Section */}\n          {activeChats.length > 0 && (\n            <div className=\"border-b border-gray-200\">\n              <div className=\"p-4\">\n                <h3 className=\"text-lg font-semibold mb-3 text-gray-800\">Active Chats</h3>\n                <div className=\"space-y-2\">\n                  {activeChats.map(chat => (\n                    <div\n                      key={chat.roomId}\n                      onClick={() => handleChatSelect(chat)}\n                      className={clsx(\n                        \"flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-colors\",\n                        {\n                          \"bg-blue-100 border border-blue-200\": selectedRoomId === chat.roomId,\n                          \"hover:bg-gray-100\": selectedRoomId !== chat.roomId,\n                        }\n                      )}\n                    >\n                      <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium\">\n                        {(chat.user.display_name || chat.user.name || chat.user.username || chat.user.email || 'U').charAt(0).toUpperCase()}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium text-gray-900 truncate\">\n                          {chat.user.display_name || chat.user.name || chat.user.username || chat.user.email}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">Active chat</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Online Users Section */}\n          <div className=\"flex-1 overflow-y-auto\">\n            <UserList\n              currentUser={currentUser}\n              onStartChat={handleStartChat}\n              onlineUsers={onlineUsers}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={clsx(\n        \"flex-1 flex flex-col transition-all duration-300 ease-in-out\",\n        {\n          \"hidden\": isMobile && showSidebar,\n        }\n      )}>\n        {selectedRoomId && selectedUser ? (\n          <ChatMain\n            messages={messages}\n            isConnected={isConnected}\n            currentRoom={currentRoom}\n            selectedRoomId={selectedRoomId}\n            selectedUser={selectedUser}\n            sendMessage={(roomId, message, encryptedData) => sendWebSocketMessage(roomId, message, encryptedData)}\n            connectionError={connectionError}\n            lastError={lastError}\n            pendingMessagesCount={pendingMessagesCount}\n            retryConnection={retryConnection}\n            encryptionStatus={encryptionStatus}\n            currentUser={currentUser}\n            isMobile={isMobile}\n            onBackToList={handleBackToList}\n            typingUsers={typingUsers.filter(user => user.room_id === selectedRoomId)}\n            onlineUsers={onlineUsers}\n            startTyping={() => startTyping(selectedRoomId)}\n            stopTyping={() => stopTyping(selectedRoomId)}\n          />\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center bg-gray-50\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Welcome to Chat</h3>\n              <p className=\"text-gray-600 mb-4\">Select a user from the sidebar to start chatting</p>\n              {!isConnected && (\n                <div className=\"text-sm text-red-600\">\n                  {connectionError || 'Connecting to chat server...'}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Encryption Settings Modal */}\n        <EncryptionSettings\n          isOpen={showEncryptionSettings}\n          onClose={() => setShowEncryptionSettings(false)}\n        />\n      </div>\n      </div>\n    </EncryptionErrorBoundary>\n  );\n}\n\nexport default memo(ChatInterface);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7446, "column": 0}, "map": {"version":3,"sources":["file:///Users/aviasnani/Desktop/computer%20demo/cs-demo/repo/frontend/src/app/chat/page.js"],"sourcesContent":["\"use client\"\nimport ChatInterface from '../../components/ChatInterface';\n\nexport default function ChatPage() {\n  return <ChatInterface />;\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,8OAAC,kIAAA,CAAA,UAAa;;;;;AACvB","debugId":null}}]
}